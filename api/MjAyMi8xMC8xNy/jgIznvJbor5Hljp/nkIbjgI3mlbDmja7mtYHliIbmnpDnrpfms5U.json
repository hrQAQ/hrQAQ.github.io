{"title":"「编译原理」数据流分析算法","date":"2022-10-17T14:58:07.000Z","date_formatted":{"ll":"Oct 17, 2022","L":"10/17/2022","MM-DD":"10-17"},"thumbnail":"https://images.unsplash.com/photo-1484100356142-db6ab6244067?ixlib=rb-4.0.3&ixid=MnwxMjA3fDB8MHxwaG90by1wYWdlfHx8fGVufDB8fHx8&auto=format&fit=crop&w=1067&q=80","link":"2022/10/17/「编译原理」数据流分析算法","comments":true,"tags":["数据流分析","理论复习"],"categories":["编译原理"],"updated":"2022-11-08T19:57:31.294Z","content":"<hr>\n<h2 id=\"基本块划分\">基本块划分<a title=\"#基本块划分\" href=\"#基本块划分\"></a></h2>\n<p>标记<strong>跳转语句</strong>的两个出口就可以得到基本块的入口语句</p>\n<p><img src=\"/2022/10/17/%E3%80%8C%E7%BC%96%E8%AF%91%E5%8E%9F%E7%90%86%E3%80%8D%E6%95%B0%E6%8D%AE%E6%B5%81%E5%88%86%E6%9E%90%E7%AE%97%E6%B3%95/image-20221017230935347.png\" alt=\"image-20221017230935347\" loading=\"lazy\" class=\"φbp\"></p>\n<hr>\n<h2 id=\"dag图\">DAG图<a title=\"#dag图\" href=\"#dag图\"></a></h2>\n<p><strong>从中间代码建立DAG图</strong></p>\n<p>建立node表，逐步建立DAG图，维护表内的&lt;变量-节点&gt;对应关系。注意在def之前就被use的变量<svg xmlns:xlink=\"http://www.w3.org/1999/xlink\" width=\"1.766ex\" height=\"2.176ex\" style=\"vertical-align: -0.338ex;\" viewbox=\"0 -791.3 760.5 936.9\" role=\"img\" focusable=\"false\" xmlns=\"http://www.w3.org/2000/svg\" aria-labelledby=\"MathJax-SVG-1-Title\">\n<title id=\"MathJax-SVG-1-Title\">C</title>\n<defs aria-hidden=\"true\">\n<path stroke-width=\"1\" id=\"E1-MJMATHI-43\" d=\"M50 252Q50 367 117 473T286 641T490 704Q580 704 633 653Q642 643 648 636T656 626L657 623Q660 623 684 649Q691 655 699 663T715 679T725 690L740 705H746Q760 705 760 698Q760 694 728 561Q692 422 692 421Q690 416 687 415T669 413H653Q647 419 647 422Q647 423 648 429T650 449T651 481Q651 552 619 605T510 659Q484 659 454 652T382 628T299 572T226 479Q194 422 175 346T156 222Q156 108 232 58Q280 24 350 24Q441 24 512 92T606 240Q610 253 612 255T628 257Q648 257 648 248Q648 243 647 239Q618 132 523 55T319 -22Q206 -22 128 53T50 252Z\"/>\n</defs>\n<g stroke=\"currentColor\" fill=\"currentColor\" stroke-width=\"0\" transform=\"matrix(1 0 0 -1 0 0)\" aria-hidden=\"true\">\n <use xlink:href=\"#E1-MJMATHI-43\" x=\"0\" y=\"0\"/>\n</g>\n</svg>需要引入<svg xmlns:xlink=\"http://www.w3.org/1999/xlink\" width=\"7.581ex\" height=\"2.509ex\" style=\"vertical-align: -0.671ex;\" viewbox=\"0 -791.3 3264 1080.4\" role=\"img\" focusable=\"false\" xmlns=\"http://www.w3.org/2000/svg\" aria-labelledby=\"MathJax-SVG-1-Title\">\n<title id=\"MathJax-SVG-1-Title\">C_0 = C</title>\n<defs aria-hidden=\"true\">\n<path stroke-width=\"1\" id=\"E1-MJMATHI-43\" d=\"M50 252Q50 367 117 473T286 641T490 704Q580 704 633 653Q642 643 648 636T656 626L657 623Q660 623 684 649Q691 655 699 663T715 679T725 690L740 705H746Q760 705 760 698Q760 694 728 561Q692 422 692 421Q690 416 687 415T669 413H653Q647 419 647 422Q647 423 648 429T650 449T651 481Q651 552 619 605T510 659Q484 659 454 652T382 628T299 572T226 479Q194 422 175 346T156 222Q156 108 232 58Q280 24 350 24Q441 24 512 92T606 240Q610 253 612 255T628 257Q648 257 648 248Q648 243 647 239Q618 132 523 55T319 -22Q206 -22 128 53T50 252Z\"/>\n<path stroke-width=\"1\" id=\"E1-MJMAIN-30\" d=\"M96 585Q152 666 249 666Q297 666 345 640T423 548Q460 465 460 320Q460 165 417 83Q397 41 362 16T301 -15T250 -22Q224 -22 198 -16T137 16T82 83Q39 165 39 320Q39 494 96 585ZM321 597Q291 629 250 629Q208 629 178 597Q153 571 145 525T137 333Q137 175 145 125T181 46Q209 16 250 16Q290 16 318 46Q347 76 354 130T362 333Q362 478 354 524T321 597Z\"/>\n<path stroke-width=\"1\" id=\"E1-MJMAIN-3D\" d=\"M56 347Q56 360 70 367H707Q722 359 722 347Q722 336 708 328L390 327H72Q56 332 56 347ZM56 153Q56 168 72 173H708Q722 163 722 153Q722 140 707 133H70Q56 140 56 153Z\"/>\n</defs>\n<g stroke=\"currentColor\" fill=\"currentColor\" stroke-width=\"0\" transform=\"matrix(1 0 0 -1 0 0)\" aria-hidden=\"true\">\n <use xlink:href=\"#E1-MJMATHI-43\" x=\"0\" y=\"0\"/>\n <use transform=\"scale(0.707)\" xlink:href=\"#E1-MJMAIN-30\" x=\"1011\" y=\"-213\"/>\n <use xlink:href=\"#E1-MJMAIN-3D\" x=\"1447\" y=\"0\"/>\n <use xlink:href=\"#E1-MJMATHI-43\" x=\"2503\" y=\"0\"/>\n</g>\n</svg></p>\n<p><img src=\"/2022/10/17/%E3%80%8C%E7%BC%96%E8%AF%91%E5%8E%9F%E7%90%86%E3%80%8D%E6%95%B0%E6%8D%AE%E6%B5%81%E5%88%86%E6%9E%90%E7%AE%97%E6%B3%95/image-20221017231148842.png\" alt=\"image-20221017231148842\" loading=\"lazy\" class=\"φbp\"></p>\n<p><img src=\"/2022/10/17/%E3%80%8C%E7%BC%96%E8%AF%91%E5%8E%9F%E7%90%86%E3%80%8D%E6%95%B0%E6%8D%AE%E6%B5%81%E5%88%86%E6%9E%90%E7%AE%97%E6%B3%95/image-20221017231505245.png\" alt=\"image-20221017231505245\" loading=\"lazy\" class=\"φbp\"></p>\n<p><strong>从DAG图导出中间代码</strong></p>\n<p>按照拓扑序得到导出序列，使用导出序列的逆序生成中间代码。</p>\n<p><img src=\"/2022/10/17/%E3%80%8C%E7%BC%96%E8%AF%91%E5%8E%9F%E7%90%86%E3%80%8D%E6%95%B0%E6%8D%AE%E6%B5%81%E5%88%86%E6%9E%90%E7%AE%97%E6%B3%95/image-20221017231817697.png\" alt=\"image-20221017231817697\" loading=\"lazy\" class=\"φbp\"></p>\n<h2 id=\"数据流分析\">数据流分析<a title=\"#数据流分析\" href=\"#数据流分析\"></a></h2>\n<h3 id=\"到达定义分析\">到达定义分析<a title=\"#到达定义分析\" href=\"#到达定义分析\"></a></h3>\n<p><strong>数据流方程</strong><br>\nMATHJAX-SSR-25<br>\n<strong>基本块的到达定义分析</strong></p>\n<ol>\n<li>计算gen、kill【注意kill包含后续的控制流中的语句】</li>\n<li>初始化in、out</li>\n<li>按照数据流方程算in、out【先算out后算in】</li>\n<li>若第三步有变化，则再迭代一轮，否则结束分析</li>\n</ol>\n<p><img src=\"/2022/10/17/%E3%80%8C%E7%BC%96%E8%AF%91%E5%8E%9F%E7%90%86%E3%80%8D%E6%95%B0%E6%8D%AE%E6%B5%81%E5%88%86%E6%9E%90%E7%AE%97%E6%B3%95/image-20221017232206301.png\" alt=\"image-20221017232206301\" loading=\"lazy\" class=\"φbp\"></p>\n<p><img src=\"/2022/10/17/%E3%80%8C%E7%BC%96%E8%AF%91%E5%8E%9F%E7%90%86%E3%80%8D%E6%95%B0%E6%8D%AE%E6%B5%81%E5%88%86%E6%9E%90%E7%AE%97%E6%B3%95/image-20221017232241070.png\" alt=\"image-20221017232241070\" loading=\"lazy\" class=\"φbp\"></p>\n<hr>\n<h3 id=\"活跃变量分析\">活跃变量分析<a title=\"#活跃变量分析\" href=\"#活跃变量分析\"></a></h3>\n<h4 id=\"活跃变量数据流分析\">活跃变量数据流分析<a title=\"#活跃变量数据流分析\" href=\"#活跃变量数据流分析\"></a></h4>\n<ul>\n<li>先计算每个基本块的def、use【注意def是在使用前定义的变量】</li>\n<li>初始化in、out为空</li>\n<li>按照数据流方程计算in、out一轮</li>\n<li>前一步如果有更新in、out就再迭代一轮，否则结束分析</li>\n</ul>\n<p><img src=\"/2022/10/17/%E3%80%8C%E7%BC%96%E8%AF%91%E5%8E%9F%E7%90%86%E3%80%8D%E6%95%B0%E6%8D%AE%E6%B5%81%E5%88%86%E6%9E%90%E7%AE%97%E6%B3%95/image-20221017234214749.png\" alt=\"image-20221017234214749\" loading=\"lazy\" class=\"φbp\"></p>\n<p><img src=\"/2022/10/17/%E3%80%8C%E7%BC%96%E8%AF%91%E5%8E%9F%E7%90%86%E3%80%8D%E6%95%B0%E6%8D%AE%E6%B5%81%E5%88%86%E6%9E%90%E7%AE%97%E6%B3%95/image-20221017234356143.png\" alt=\"image-20221017234356143\" loading=\"lazy\" class=\"φbp\"></p>\n<p><img src=\"/2022/10/17/%E3%80%8C%E7%BC%96%E8%AF%91%E5%8E%9F%E7%90%86%E3%80%8D%E6%95%B0%E6%8D%AE%E6%B5%81%E5%88%86%E6%9E%90%E7%AE%97%E6%B3%95/image-20221017234518642.png\" alt=\"image-20221017234518642\" loading=\"lazy\" class=\"φbp\"></p>\n<h4 id=\"冲突图\">冲突图<a title=\"#冲突图\" href=\"#冲突图\"></a></h4>\n<p>变量X在变量Y的定义点是活跃变量，那么变量X,Y是冲突变量，这意味着它们在寄存器分配时不能同时使用同一个寄存器。</p>\n<h3 id=\"def-use链\">def-use链<a title=\"#def-use链\" href=\"#def-use链\"></a></h3>\n<p>变量的定义-使用链，是指变量的某一定义点，以及所有可能使用该定义点所定义变量值的使用点所组成的一个链 。同一变量的多个定义-使用链，如果它们拥有某个同样的使用点，则合并为同一个网。</p>\n<p>具体计算需要先使用到达定义数据流分析得出。</p>\n<p><img src=\"/2022/10/17/%E3%80%8C%E7%BC%96%E8%AF%91%E5%8E%9F%E7%90%86%E3%80%8D%E6%95%B0%E6%8D%AE%E6%B5%81%E5%88%86%E6%9E%90%E7%AE%97%E6%B3%95/image-20221017235203713.png\" alt=\"image-20221017235203713\" loading=\"lazy\" class=\"φbp\"></p>\n<hr>\n<h2 id=\"ssa\">SSA<a title=\"#ssa\" href=\"#ssa\"></a></h2>\n<p><strong>算法概览</strong></p>\n<ol>\n<li>建立CFG流图</li>\n<li>通过CFG构造Dominator-tree （<a href=\"https://blog.csdn.net/Dong_HFUT/article/details/121375025\" target=\"_blank\">算法参考</a>）</li>\n<li>在Dominator-tree上计算每个节点的Dominator Frontier（<a href=\"https://blog.csdn.net/dashuniuniu/article/details/52224882\" target=\"_blank\">算法参考</a>）</li>\n<li>使用Dominator Frontier插入ϕ指令（支配边界获取了需要Φ函数的精确的位置：如果点A定义了一个变量，那个这个变量将会达到所有点A的支配点，只有在当我们离开这些点，而且进入支配边界，我们才必须考虑其他流程会带着其它相同变量的定义）</li>\n<li>最后重命名变量。</li>\n</ol>\n","prev":{"title":"「编译原理」词法分析进阶","link":"2022/10/25/「编译原理」词法分析进阶"},"next":{"title":"「系统编程」文件操作","link":"2022/10/04/「系统编程」文件操作"},"plink":"http://blog.horik.cn/2022/10/17/「编译原理」数据流分析算法/","toc":[{"id":"基本块划分","title":"基本块划分","index":"1"},{"id":"dag图","title":"DAG图","index":"2"},{"id":"数据流分析","title":"数据流分析","index":"3","children":[{"id":"到达定义分析","title":"到达定义分析","index":"3.1"},{"id":"活跃变量分析","title":"活跃变量分析","index":"3.2","children":[{"id":"活跃变量数据流分析","title":"活跃变量数据流分析","index":"3.2.1"},{"id":"冲突图","title":"冲突图","index":"3.2.2"}]},{"id":"def-use链","title":"def-use链","index":"3.3"}]},{"id":"ssa","title":"SSA","index":"4"}],"reward":true,"copyright":{"author":"Horik","link":"<a href=\"http://blog.horik.cn/2022/10/17/「编译原理」数据流分析算法/\" title=\"「编译原理」数据流分析算法\">http://blog.horik.cn/2022/10/17/「编译原理」数据流分析算法/</a>","license":"Attribution-NonCommercial-NoDerivatives 4.0 International (<a href=\\\"https://creativecommons.org/licenses/by-nc-sa/4.0/\\\" rel=\\\"external nofollow\\\" target=\\\"_blank\\\">CC BY-NC-ND 4.0</a>)","published":"October 17, 2022","updated":"November 8, 2022"},"reading_time":"1066 words in 7 min"}