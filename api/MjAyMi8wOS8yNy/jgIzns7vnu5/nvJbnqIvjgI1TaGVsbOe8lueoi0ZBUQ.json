{"title":"「系统编程」Shell编程FAQ","date":"2022-09-27T16:32:17.000Z","date_formatted":{"ll":"Sep 27, 2022","L":"09/27/2022","MM-DD":"09-27"},"thumbnail":"https://images.unsplash.com/photo-1629624927838-3b39b7fdd33c?ixlib=rb-1.2.1&ixid=MnwxMjA3fDB8MHxwaG90by1wYWdlfHx8fGVufDB8fHx8&auto=format&fit=crop&w=1169&q=80","link":"2022/09/27/「系统编程」Shell编程FAQ","comments":true,"tags":["Linux基础","shell编程"],"categories":["系统编程"],"updated":"2022-10-25T22:28:57.333Z","content":"<p>[TOC]</p>\n<blockquote>\n<p><strong>&lt;FAQ&gt;:= &lt;Basic&gt; + &lt;Cooooool&gt;</strong></p>\n<p>年轻人的自动化脚本启航之旅——shell编程！运行一个脚本，命令行开始跳动不明意义的字符，不觉得这很酷吗？作为一名理工男我觉得这实在是太酷了，很符合我对未来生活的想象，科技并带着趣味…</p>\n</blockquote>\n<hr>\n<h2 id=\"基本语法约定\">基本语法约定<a title=\"#基本语法约定\" href=\"#基本语法约定\"></a></h2>\n<p><strong>bash脚本内容：</strong></p>\n<pre class=\"line-numbers language-bash\" data-language=\"bash\"><code class=\"language-bash\"># 这是一行注释，以#号开头\n\n# 下面这一行不是注释，它的作用是指明脚本使用的解释器，让脚本能跑起来\n#!&#x2F;bin&#x2F;bash\n\n# 每一行是一个命令\necho &quot;hello&quot;\n\n# 可以用&lt;;&gt; 在同一行使用多个命令\necho &quot;new&quot;; echo &quot;world&quot;\n\n# 逗号连接了一串运算式子，把最后一个表达式的值返回给左值（不觉得拆开写更有可读性吗？奇怪的语法）\nlet &quot;t2 &#x3D; ((a &#x3D; 9, 15 &#x2F; 3))&quot;\necho t2\t# 结果为5\n\n# 转义符号是反斜杠\necho &quot;\\&quot;&quot;\n\nexit 0\t# 正常结束脚本，非0为异常结束<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n<p><strong>命令行内容：</strong></p>\n<pre class=\"line-numbers language-bash\" data-language=\"bash\"><code class=\"language-bash\"># 运行脚本--方式1\nsh &lt;scriptname&gt; # 禁用了脚本stdin中读数据的功能(不推荐)\n\n# 运行脚本--方式2\nbash &lt;scriptname&gt;\n\n# 运行脚本--方式3\nchmod [555|+rx|u+rx] &lt;scriptname&gt;\t# 脚本必须具有可执行权限\n.&#x2F;&lt;scriptname&gt;\t\t# 对了,bash脚本以.sh作为后缀名\n\n# 查看脚本的退出码\necho $?\t# $?可以读取上一条命令（上一个程序）的退出码<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n<h2 id=\"变量\">变量<a title=\"#变量\" href=\"#变量\"></a></h2>\n<h3 id=\"环境变量\">环境变量<a title=\"#环境变量\" href=\"#环境变量\"></a></h3>\n<p>环境变量就是工作环境(系统)下的全局变量（本质上就是已经提前定义好的变量）</p>\n<pre class=\"line-numbers language-dart\" data-language=\"dart\"><code class=\"language-dart\">HOME 用于保持注册目录的完全路径名\nPWD 当前工作目录的绝对路径\nPS1 主提示符，特权用户是#，普通用户是$。<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span></span></code></pre>\n<p><strong>定义环境变量</strong></p>\n<pre class=\"line-numbers language-bash\" data-language=\"bash\"><code class=\"language-bash\">export environment_variable&#x3D;xxxxx<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span></span></code></pre>\n<p>使用上面这个语句，当你退出当前的 Terminal，再次打开一个新的 Terminal 时，将无法再次访问 system_programming 。这是因为，我们上次进行的修改，是在一个 bash 的进程中修改的，当我们关闭 Terminal，就终止了这个进程；当再次启动一个新的 Terminal 时，就重新开启了一个新的进程，这个新的进程自然是访问不到别的进程的变量的。</p>\n<p>当一个 bash 进程启动时（即，打开一个 Terminal 或者远程 SSH 登录时），该进程会读取 ~/.bashrc 文件来完成初始化。因此，我们只需要把上面提到的 export<br>\n语句写到 ~/.bashrc 文件中就可以了。</p>\n<p>为了达到所有用户都可以访问的效果，我们可以把 export 语句写 到 /etc/profile 文件，当系统启动时会读取到该文件。</p>\n<p><strong>使用C语言获取环境变量</strong></p>\n<p>可以使用全局变量<code>environ</code>获取所有的环境变量：</p>\n<pre class=\"line-numbers language-c\" data-language=\"c\"><code class=\"language-c\"># include &lt;stdio.h&gt;\nextern char** environ;\nint main(int argc, char const* argv[]) &#123;\n    char** p &#x3D; environ;\n    for (; *p !&#x3D; NULL; p++) &#123;\n        printf(&quot;%s\\n&quot;, *p);\n    &#125;\n    return 0;\n&#125;<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n<p>还可以使用函数<code>getenv()</code> 返回特定的环境变量的值：</p>\n<pre class=\"line-numbers language-c\" data-language=\"c\"><code class=\"language-c\">#include &lt;stdio.h&gt;\n#include &lt;stdlib.h&gt;\n\nint main(int argc, char const *argv[]) &#123;\n    const char* envName &#x3D; &quot;SHELL&quot;;\n    printf(&quot;$SHELL &#x3D; %s\\n&quot;, getenv(envName));\n    return 0;\n&#125;<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n<h3 id=\"用户变量\">用户变量<a title=\"#用户变量\" href=\"#用户变量\"></a></h3>\n<pre class=\"line-numbers language-bash\" data-language=\"bash\"><code class=\"language-bash\"># 定义变量\n&lt;var_name&gt;&#x3D;&lt;var_value&gt;\t# 这里的等号旁边不能加空格（貌似脚本语言对缩进、空格的要求都挺高的，我猜这是为了方便写解释器）\nreadonly &lt;var_name&gt;&#x3D;&lt;var_value&gt; # 只读的变量（感觉没啥用）\n# 使用变量\n$&lt;var_name&gt;\t\t\t# 我喜欢这种，写起来简单\n$&#123;&lt;var_name&gt;&#125;\t\t# 支持数组\n&quot;$&lt;var_name&gt;&quot;\t\t# 防止变量中含空格造成错误\n&quot;$&#123;&lt;var_name&gt;&#125;&quot; \t# 支持数组且支持空格\n\n# 例子\nvar1&#x3D;1\nvar2&#x3D;$&#123;var1&#125;\necho $&#123;var2&#125;\n&gt;&gt; 1\necho $var2\n&gt;&gt; 1\n# 错误例子\n\nvar &#x3D; 1\t# 变量赋值不能有空格\n&gt;&gt; [ERROR!] var：未找到命令<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n<h3 id=\"奇怪的引号机制\">奇怪的引号机制<a title=\"#奇怪的引号机制\" href=\"#奇怪的引号机制\"></a></h3>\n<p>第一次接触shell的时候在引号这里踩了坑，这里记录一下不同引号的作用</p>\n<p><strong>单引号</strong></p>\n<p>单引号括起来的字符均作为普通字符出现。</p>\n<pre class=\"line-numbers language-bash\" data-language=\"bash\"><code class=\"language-bash\">string&#x3D;&#39;$PATH&#39; \necho $string\n&gt;&gt;$PATH # string被视为了纯字符串<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span></span></code></pre>\n<p><strong>双引号</strong></p>\n<p>双引号括起来的字符除$、\\、'、和&quot;之外都将作为普通字符对待。</p>\n<pre class=\"line-numbers language-bash\" data-language=\"bash\"><code class=\"language-bash\">string&#x3D;&quot;$PATH&quot;\necho $string\n&gt;&gt; &#x2F;usr&#x2F;bin:&#x2F;root\t# string内的path被视为了命令<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span></span></code></pre>\n<p><strong>反引号</strong></p>\n<p>后置引用，命令替换。其所括字符串在被Shell解释时，首先执行其中的命令，并将其结果代替该命令</p>\n<pre class=\"line-numbers language-bash\" data-language=\"bash\"><code class=\"language-bash\">pwd \n&gt;&gt; &#x2F;root\nstring&#x3D;&quot;current directory is &#96;pwd&#96;&quot; \necho $string\n# string中的pwd被命令执行的结构替换了\n&gt;&gt; Current directory is &#x2F;root<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n<p><strong>引号嵌套</strong></p>\n<p>从最外层开始解释</p>\n<pre class=\"line-numbers language-bash\" data-language=\"bash\"><code class=\"language-bash\">#!&#x2F;bin&#x2F;bash\nB&#x3D;&#96;cat b.c|grep 234&#96;\necho $B\necho &#39;$B&#39;\n&gt;&gt; 1234\n&gt;&gt; $B\t# 外层的单引号&#39;&#39;让变量B没机会替换其定义的内容（个人理解）<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n<h3 id=\"命令行参数\">命令行参数<a title=\"#命令行参数\" href=\"#命令行参数\"></a></h3>\n<p><strong>内部变量</strong></p>\n<p><code>$#`和`$*</code>是比较常用的内部变量，可以帮助脚本接受来自命令行的参数信息（args）</p>\n<pre class=\"line-numbers language-bash\" data-language=\"bash\"><code class=\"language-bash\">$# 传递给脚本参数的数量\n$* 所有传递给脚本的参数内容 \n$? 上条命令执行后返回的状态 \n$$ 当前进程的进程号→最常见的用途是作为暂存文件的名称，以保证不会重复。\n$! 后台运行的最后一个进程号 \n$0 当前执行的进程名\n<svg xmlns:xlink=\"http://www.w3.org/1999/xlink\" width=\"6.141ex\" height=\"3.343ex\" style=\"vertical-align: -1.171ex;\" viewbox=\"0 -934.9 2644.2 1439.2\" role=\"img\" focusable=\"false\" xmlns=\"http://www.w3.org/2000/svg\" aria-labelledby=\"MathJax-SVG-1-Title\">\n<title id=\"MathJax-SVG-1-Title\">@ 它是</title>\n<defs aria-hidden=\"true\">\n<path stroke-width=\"1\" id=\"E1-MJMAIN-40\" d=\"M56 347Q56 429 86 498T164 612T270 680T386 705Q522 705 622 603T722 349Q722 126 608 126Q541 126 513 176Q512 177 512 179T510 182L509 183Q508 183 503 177T487 163T464 146T429 132T385 126Q311 126 251 186T190 347Q190 448 251 508T385 568Q426 568 460 548T509 511T531 479H555Q580 479 582 478Q586 477 587 468Q588 454 588 338V260Q588 200 593 182T619 163Q641 163 655 178T674 223T680 273T682 325V330Q682 426 647 500Q611 569 544 618T388 668Q271 668 184 577T96 347Q96 216 180 121T396 26Q421 26 446 28T493 34T535 43T573 52T605 63T629 72T647 80T657 84H716Q722 78 722 74Q722 65 675 45T547 7T392 -11Q255 -11 156 90T56 347ZM274 347Q274 266 308 214T390 162Q420 162 449 182T498 235L504 245V449L498 459Q453 532 387 532Q347 532 311 483T274 347Z\"/>\n</defs>\n<g stroke=\"currentColor\" fill=\"currentColor\" stroke-width=\"0\" transform=\"matrix(1 0 0 -1 0 0)\" aria-hidden=\"true\">\n <use xlink:href=\"#E1-MJMAIN-40\" x=\"0\" y=\"0\"/>\n<g transform=\"translate(778,0)\">\n<text font-family=\"monospace\" stroke=\"none\" transform=\"scale(71.759) matrix(1 0 0 -1 0 0)\">它</text>\n</g>\n<g transform=\"translate(1711,0)\">\n<text font-family=\"monospace\" stroke=\"none\" transform=\"scale(71.759) matrix(1 0 0 -1 0 0)\">是</text>\n</g>\n</g>\n</svg>*的另外一种形式，它不使用IFS。<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n<p>IFS是什么？</p>\n<pre class=\"line-numbers language-bash\" data-language=\"bash\"><code class=\"language-bash\">$ IFS='' \t# IFS用于设置`$*&#96;多参数之间的分隔符\n$ set foo bar bam \n<svg xmlns:xlink=\"http://www.w3.org/1999/xlink\" width=\"6.365ex\" height=\"2.176ex\" style=\"vertical-align: -0.338ex;\" viewbox=\"0 -791.3 2740.3 936.9\" role=\"img\" focusable=\"false\" xmlns=\"http://www.w3.org/2000/svg\" aria-labelledby=\"MathJax-SVG-1-Title\">\n<title id=\"MathJax-SVG-1-Title\"> echo \"</title>\n<defs aria-hidden=\"true\">\n<path stroke-width=\"1\" id=\"E1-MJMATHI-65\" d=\"M39 168Q39 225 58 272T107 350T174 402T244 433T307 442H310Q355 442 388 420T421 355Q421 265 310 237Q261 224 176 223Q139 223 138 221Q138 219 132 186T125 128Q125 81 146 54T209 26T302 45T394 111Q403 121 406 121Q410 121 419 112T429 98T420 82T390 55T344 24T281 -1T205 -11Q126 -11 83 42T39 168ZM373 353Q367 405 305 405Q272 405 244 391T199 357T170 316T154 280T149 261Q149 260 169 260Q282 260 327 284T373 353Z\"/>\n<path stroke-width=\"1\" id=\"E1-MJMATHI-63\" d=\"M34 159Q34 268 120 355T306 442Q362 442 394 418T427 355Q427 326 408 306T360 285Q341 285 330 295T319 325T330 359T352 380T366 386H367Q367 388 361 392T340 400T306 404Q276 404 249 390Q228 381 206 359Q162 315 142 235T121 119Q121 73 147 50Q169 26 205 26H209Q321 26 394 111Q403 121 406 121Q410 121 419 112T429 98T420 83T391 55T346 25T282 0T202 -11Q127 -11 81 37T34 159Z\"/>\n<path stroke-width=\"1\" id=\"E1-MJMATHI-68\" d=\"M137 683Q138 683 209 688T282 694Q294 694 294 685Q294 674 258 534Q220 386 220 383Q220 381 227 388Q288 442 357 442Q411 442 444 415T478 336Q478 285 440 178T402 50Q403 36 407 31T422 26Q450 26 474 56T513 138Q516 149 519 151T535 153Q555 153 555 145Q555 144 551 130Q535 71 500 33Q466 -10 419 -10H414Q367 -10 346 17T325 74Q325 90 361 192T398 345Q398 404 354 404H349Q266 404 205 306L198 293L164 158Q132 28 127 16Q114 -11 83 -11Q69 -11 59 -2T48 16Q48 30 121 320L195 616Q195 629 188 632T149 637H128Q122 643 122 645T124 664Q129 683 137 683Z\"/>\n<path stroke-width=\"1\" id=\"E1-MJMATHI-6F\" d=\"M201 -11Q126 -11 80 38T34 156Q34 221 64 279T146 380Q222 441 301 441Q333 441 341 440Q354 437 367 433T402 417T438 387T464 338T476 268Q476 161 390 75T201 -11ZM121 120Q121 70 147 48T206 26Q250 26 289 58T351 142Q360 163 374 216T388 308Q388 352 370 375Q346 405 306 405Q243 405 195 347Q158 303 140 230T121 120Z\"/>\n<path stroke-width=\"1\" id=\"E1-MJMAIN-22\" d=\"M34 634Q34 659 50 676T93 694Q121 694 144 668T168 579Q168 525 146 476T101 403T73 379Q69 379 60 388T50 401Q50 404 62 417T88 448T116 500T131 572Q131 584 130 584T125 581T112 576T94 573Q69 573 52 590T34 634ZM238 634Q238 659 254 676T297 694Q325 694 348 668T372 579Q372 525 350 476T305 403T277 379Q273 379 264 388T254 401Q254 404 266 417T292 448T320 500T335 572Q335 584 334 584T329 581T316 576T298 573Q273 573 256 590T238 634Z\"/>\n</defs>\n<g stroke=\"currentColor\" fill=\"currentColor\" stroke-width=\"0\" transform=\"matrix(1 0 0 -1 0 0)\" aria-hidden=\"true\">\n <use xlink:href=\"#E1-MJMATHI-65\" x=\"0\" y=\"0\"/>\n <use xlink:href=\"#E1-MJMATHI-63\" x=\"466\" y=\"0\"/>\n <use xlink:href=\"#E1-MJMATHI-68\" x=\"900\" y=\"0\"/>\n <use xlink:href=\"#E1-MJMATHI-6F\" x=\"1476\" y=\"0\"/>\n <use xlink:href=\"#E1-MJMAIN-22\" x=\"2239\" y=\"0\"/>\n</g>\n</svg>@&quot; \nfoo bar bam \n<svg xmlns:xlink=\"http://www.w3.org/1999/xlink\" width=\"6.365ex\" height=\"2.176ex\" style=\"vertical-align: -0.338ex;\" viewbox=\"0 -791.3 2740.3 936.9\" role=\"img\" focusable=\"false\" xmlns=\"http://www.w3.org/2000/svg\" aria-labelledby=\"MathJax-SVG-1-Title\">\n<title id=\"MathJax-SVG-1-Title\"> echo \"</title>\n<defs aria-hidden=\"true\">\n<path stroke-width=\"1\" id=\"E1-MJMATHI-65\" d=\"M39 168Q39 225 58 272T107 350T174 402T244 433T307 442H310Q355 442 388 420T421 355Q421 265 310 237Q261 224 176 223Q139 223 138 221Q138 219 132 186T125 128Q125 81 146 54T209 26T302 45T394 111Q403 121 406 121Q410 121 419 112T429 98T420 82T390 55T344 24T281 -1T205 -11Q126 -11 83 42T39 168ZM373 353Q367 405 305 405Q272 405 244 391T199 357T170 316T154 280T149 261Q149 260 169 260Q282 260 327 284T373 353Z\"/>\n<path stroke-width=\"1\" id=\"E1-MJMATHI-63\" d=\"M34 159Q34 268 120 355T306 442Q362 442 394 418T427 355Q427 326 408 306T360 285Q341 285 330 295T319 325T330 359T352 380T366 386H367Q367 388 361 392T340 400T306 404Q276 404 249 390Q228 381 206 359Q162 315 142 235T121 119Q121 73 147 50Q169 26 205 26H209Q321 26 394 111Q403 121 406 121Q410 121 419 112T429 98T420 83T391 55T346 25T282 0T202 -11Q127 -11 81 37T34 159Z\"/>\n<path stroke-width=\"1\" id=\"E1-MJMATHI-68\" d=\"M137 683Q138 683 209 688T282 694Q294 694 294 685Q294 674 258 534Q220 386 220 383Q220 381 227 388Q288 442 357 442Q411 442 444 415T478 336Q478 285 440 178T402 50Q403 36 407 31T422 26Q450 26 474 56T513 138Q516 149 519 151T535 153Q555 153 555 145Q555 144 551 130Q535 71 500 33Q466 -10 419 -10H414Q367 -10 346 17T325 74Q325 90 361 192T398 345Q398 404 354 404H349Q266 404 205 306L198 293L164 158Q132 28 127 16Q114 -11 83 -11Q69 -11 59 -2T48 16Q48 30 121 320L195 616Q195 629 188 632T149 637H128Q122 643 122 645T124 664Q129 683 137 683Z\"/>\n<path stroke-width=\"1\" id=\"E1-MJMATHI-6F\" d=\"M201 -11Q126 -11 80 38T34 156Q34 221 64 279T146 380Q222 441 301 441Q333 441 341 440Q354 437 367 433T402 417T438 387T464 338T476 268Q476 161 390 75T201 -11ZM121 120Q121 70 147 48T206 26Q250 26 289 58T351 142Q360 163 374 216T388 308Q388 352 370 375Q346 405 306 405Q243 405 195 347Q158 303 140 230T121 120Z\"/>\n<path stroke-width=\"1\" id=\"E1-MJMAIN-22\" d=\"M34 634Q34 659 50 676T93 694Q121 694 144 668T168 579Q168 525 146 476T101 403T73 379Q69 379 60 388T50 401Q50 404 62 417T88 448T116 500T131 572Q131 584 130 584T125 581T112 576T94 573Q69 573 52 590T34 634ZM238 634Q238 659 254 676T297 694Q325 694 348 668T372 579Q372 525 350 476T305 403T277 379Q273 379 264 388T254 401Q254 404 266 417T292 448T320 500T335 572Q335 584 334 584T329 581T316 576T298 573Q273 573 256 590T238 634Z\"/>\n</defs>\n<g stroke=\"currentColor\" fill=\"currentColor\" stroke-width=\"0\" transform=\"matrix(1 0 0 -1 0 0)\" aria-hidden=\"true\">\n <use xlink:href=\"#E1-MJMATHI-65\" x=\"0\" y=\"0\"/>\n <use xlink:href=\"#E1-MJMATHI-63\" x=\"466\" y=\"0\"/>\n <use xlink:href=\"#E1-MJMATHI-68\" x=\"900\" y=\"0\"/>\n <use xlink:href=\"#E1-MJMATHI-6F\" x=\"1476\" y=\"0\"/>\n <use xlink:href=\"#E1-MJMAIN-22\" x=\"2239\" y=\"0\"/>\n</g>\n</svg>*&quot;\nfoobarbam \n$ unset IFS \n<svg xmlns:xlink=\"http://www.w3.org/1999/xlink\" width=\"6.365ex\" height=\"2.176ex\" style=\"vertical-align: -0.338ex;\" viewbox=\"0 -791.3 2740.3 936.9\" role=\"img\" focusable=\"false\" xmlns=\"http://www.w3.org/2000/svg\" aria-labelledby=\"MathJax-SVG-1-Title\">\n<title id=\"MathJax-SVG-1-Title\"> echo \"</title>\n<defs aria-hidden=\"true\">\n<path stroke-width=\"1\" id=\"E1-MJMATHI-65\" d=\"M39 168Q39 225 58 272T107 350T174 402T244 433T307 442H310Q355 442 388 420T421 355Q421 265 310 237Q261 224 176 223Q139 223 138 221Q138 219 132 186T125 128Q125 81 146 54T209 26T302 45T394 111Q403 121 406 121Q410 121 419 112T429 98T420 82T390 55T344 24T281 -1T205 -11Q126 -11 83 42T39 168ZM373 353Q367 405 305 405Q272 405 244 391T199 357T170 316T154 280T149 261Q149 260 169 260Q282 260 327 284T373 353Z\"/>\n<path stroke-width=\"1\" id=\"E1-MJMATHI-63\" d=\"M34 159Q34 268 120 355T306 442Q362 442 394 418T427 355Q427 326 408 306T360 285Q341 285 330 295T319 325T330 359T352 380T366 386H367Q367 388 361 392T340 400T306 404Q276 404 249 390Q228 381 206 359Q162 315 142 235T121 119Q121 73 147 50Q169 26 205 26H209Q321 26 394 111Q403 121 406 121Q410 121 419 112T429 98T420 83T391 55T346 25T282 0T202 -11Q127 -11 81 37T34 159Z\"/>\n<path stroke-width=\"1\" id=\"E1-MJMATHI-68\" d=\"M137 683Q138 683 209 688T282 694Q294 694 294 685Q294 674 258 534Q220 386 220 383Q220 381 227 388Q288 442 357 442Q411 442 444 415T478 336Q478 285 440 178T402 50Q403 36 407 31T422 26Q450 26 474 56T513 138Q516 149 519 151T535 153Q555 153 555 145Q555 144 551 130Q535 71 500 33Q466 -10 419 -10H414Q367 -10 346 17T325 74Q325 90 361 192T398 345Q398 404 354 404H349Q266 404 205 306L198 293L164 158Q132 28 127 16Q114 -11 83 -11Q69 -11 59 -2T48 16Q48 30 121 320L195 616Q195 629 188 632T149 637H128Q122 643 122 645T124 664Q129 683 137 683Z\"/>\n<path stroke-width=\"1\" id=\"E1-MJMATHI-6F\" d=\"M201 -11Q126 -11 80 38T34 156Q34 221 64 279T146 380Q222 441 301 441Q333 441 341 440Q354 437 367 433T402 417T438 387T464 338T476 268Q476 161 390 75T201 -11ZM121 120Q121 70 147 48T206 26Q250 26 289 58T351 142Q360 163 374 216T388 308Q388 352 370 375Q346 405 306 405Q243 405 195 347Q158 303 140 230T121 120Z\"/>\n<path stroke-width=\"1\" id=\"E1-MJMAIN-22\" d=\"M34 634Q34 659 50 676T93 694Q121 694 144 668T168 579Q168 525 146 476T101 403T73 379Q69 379 60 388T50 401Q50 404 62 417T88 448T116 500T131 572Q131 584 130 584T125 581T112 576T94 573Q69 573 52 590T34 634ZM238 634Q238 659 254 676T297 694Q325 694 348 668T372 579Q372 525 350 476T305 403T277 379Q273 379 264 388T254 401Q254 404 266 417T292 448T320 500T335 572Q335 584 334 584T329 581T316 576T298 573Q273 573 256 590T238 634Z\"/>\n</defs>\n<g stroke=\"currentColor\" fill=\"currentColor\" stroke-width=\"0\" transform=\"matrix(1 0 0 -1 0 0)\" aria-hidden=\"true\">\n <use xlink:href=\"#E1-MJMATHI-65\" x=\"0\" y=\"0\"/>\n <use xlink:href=\"#E1-MJMATHI-63\" x=\"466\" y=\"0\"/>\n <use xlink:href=\"#E1-MJMATHI-68\" x=\"900\" y=\"0\"/>\n <use xlink:href=\"#E1-MJMATHI-6F\" x=\"1476\" y=\"0\"/>\n <use xlink:href=\"#E1-MJMAIN-22\" x=\"2239\" y=\"0\"/>\n</g>\n</svg>*&quot;\nfoo bar bam<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n<p><strong>位置参数</strong></p>\n<p>在命令行中按照各自的位置决定的变量，程序名之后输入的参数，之间用空格分割，第 一个参数可使用\\<svg xmlns:xlink=\"http://www.w3.org/1999/xlink\" width=\"19.076ex\" height=\"3.343ex\" style=\"vertical-align: -1.171ex;\" viewbox=\"0 -934.9 8213.4 1439.2\" role=\"img\" focusable=\"false\" xmlns=\"http://www.w3.org/2000/svg\" aria-labelledby=\"MathJax-SVG-1-Title\">\n<title id=\"MathJax-SVG-1-Title\">1取得，以此类推，\\</title>\n<defs aria-hidden=\"true\">\n<path stroke-width=\"1\" id=\"E1-MJMAIN-31\" d=\"M213 578L200 573Q186 568 160 563T102 556H83V602H102Q149 604 189 617T245 641T273 663Q275 666 285 666Q294 666 302 660V361L303 61Q310 54 315 52T339 48T401 46H427V0H416Q395 3 257 3Q121 3 100 0H88V46H114Q136 46 152 46T177 47T193 50T201 52T207 57T213 61V578Z\"/>\n</defs>\n<g stroke=\"currentColor\" fill=\"currentColor\" stroke-width=\"0\" transform=\"matrix(1 0 0 -1 0 0)\" aria-hidden=\"true\">\n <use xlink:href=\"#E1-MJMAIN-31\" x=\"0\" y=\"0\"/>\n<g transform=\"translate(500,0)\">\n<text font-family=\"monospace\" stroke=\"none\" transform=\"scale(71.759) matrix(1 0 0 -1 0 0)\">取</text>\n</g>\n<g transform=\"translate(1433,0)\">\n<text font-family=\"monospace\" stroke=\"none\" transform=\"scale(71.759) matrix(1 0 0 -1 0 0)\">得</text>\n</g>\n<g transform=\"translate(2366,0)\">\n<text font-family=\"monospace\" stroke=\"none\" transform=\"scale(71.759) matrix(1 0 0 -1 0 0)\">，</text>\n</g>\n<g transform=\"translate(3299,0)\">\n<text font-family=\"monospace\" stroke=\"none\" transform=\"scale(71.759) matrix(1 0 0 -1 0 0)\">以</text>\n</g>\n<g transform=\"translate(4231,0)\">\n<text font-family=\"monospace\" stroke=\"none\" transform=\"scale(71.759) matrix(1 0 0 -1 0 0)\">此</text>\n</g>\n<g transform=\"translate(5164,0)\">\n<text font-family=\"monospace\" stroke=\"none\" transform=\"scale(71.759) matrix(1 0 0 -1 0 0)\">类</text>\n</g>\n<g transform=\"translate(6097,0)\">\n<text font-family=\"monospace\" stroke=\"none\" transform=\"scale(71.759) matrix(1 0 0 -1 0 0)\">推</text>\n</g>\n<g transform=\"translate(7030,0)\">\n<text font-family=\"monospace\" stroke=\"none\" transform=\"scale(71.759) matrix(1 0 0 -1 0 0)\">，</text>\n</g>\n</g>\n</svg>0表示当前Shell程序的进程名。<strong>共10个位置参数变量</strong>，从程序名开始依次为 第0~9个</p>\n<pre class=\"line-numbers language-bash\" data-language=\"bash\"><code class=\"language-bash\">#!&#x2F;bin&#x2F;bash\necho &quot;The name of this script is \\&quot;$0\\&quot;.&quot;\nif [ -n &quot;$1&quot; ]; then\n    echo &quot;Parameter #1 is $1&quot;\nfi\nif [ -n &quot;$2&quot; ]; then\n    echo &quot;Parameter #2 is $2&quot;\nfi<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n<pre class=\"line-numbers language-bash\" data-language=\"bash\"><code class=\"language-bash\">.&#x2F;test.sh 114\nThe name of this script is &quot;.&#x2F;test.sh&quot;.\nParameter #1 is 114<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span></span></code></pre>\n<p>怎么使用超过十个位置呢？我们使用<strong>shift</strong>命令，shift 命令重新分配位置参数,其实就是向左移动一个位置</p>\n<pre class=\"line-numbers language-bash\" data-language=\"bash\"><code class=\"language-bash\">#!&#x2F;bin&#x2F;bash\nuntil [ -z “$1” ]; do # 直到所有参数都用完\n    echo -n &quot;$1 &quot;\n    shift\ndone<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n<p><strong>参数置换变量</strong></p>\n<p>有些参数我们会给定一些默认值，同时也开放接口支持用户在命令行提供参数修改默认值，这时候就要用到参数置换变量的语法了（虽然我感觉用 **if **判断也挺好）。下面这个例子中，如果脚本中没有命令行参数 ,那么default parameter将被使用。</p>\n<pre class=\"line-numbers language-bash\" data-language=\"bash\"><code class=\"language-bash\">#！&#x2F;bin&#x2F;bash \nDEFAULT_FILENAME&#x3D;generic.data filename&#x3D;${1:-$DEFAULT_FILENAME&#125;\necho $filename<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span></span></code></pre>\n<pre class=\"line-numbers language-bash\" data-language=\"bash\"><code class=\"language-bash\">.&#x2F;test.sh\n&gt;&gt; generic.data\n.&#x2F;test.sh abc\n&gt;&gt; abc<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span></span></code></pre>\n<p>上面的参数置换变量的语法有几种变体，它们的区别在于没有设置参数时的行为，需要的时候自查</p>\n<h2 id=\"运算\">运算<a title=\"#运算\" href=\"#运算\"></a></h2>\n<pre class=\"line-numbers language-bash\" data-language=\"bash\"><code class=\"language-bash\">#!&#x2F;bin&#x2F;bash \nx&#x3D;0 \nwhile [ &quot;$x&quot; -ne 10 ]; do \n\techo $x \n\tx&#x3D;<svg xmlns:xlink=\"http://www.w3.org/1999/xlink\" width=\"1.809ex\" height=\"2.843ex\" style=\"vertical-align: -0.838ex;\" viewbox=\"0 -863.1 779 1223.9\" role=\"img\" focusable=\"false\" xmlns=\"http://www.w3.org/2000/svg\" aria-labelledby=\"MathJax-SVG-1-Title\">\n<title id=\"MathJax-SVG-1-Title\">((</title>\n<defs aria-hidden=\"true\">\n<path stroke-width=\"1\" id=\"E1-MJMAIN-28\" d=\"M94 250Q94 319 104 381T127 488T164 576T202 643T244 695T277 729T302 750H315H319Q333 750 333 741Q333 738 316 720T275 667T226 581T184 443T167 250T184 58T225 -81T274 -167T316 -220T333 -241Q333 -250 318 -250H315H302L274 -226Q180 -141 137 -14T94 250Z\"/>\n</defs>\n<g stroke=\"currentColor\" fill=\"currentColor\" stroke-width=\"0\" transform=\"matrix(1 0 0 -1 0 0)\" aria-hidden=\"true\">\n <use xlink:href=\"#E1-MJMAIN-28\" x=\"0\" y=\"0\"/>\n <use xlink:href=\"#E1-MJMAIN-28\" x=\"389\" y=\"0\"/>\n</g>\n</svg>x+1)) \t# shell中使用$((&lt;exp&gt;))包裹表达式，让解释器知道这里要解释为运算\ndone\nexit 0\n\n\n# 另外一种方式，使用expr字段，没有括号方便，不推荐\nx&#x3D;<svg xmlns:xlink=\"http://www.w3.org/1999/xlink\" width=\"5.536ex\" height=\"2.843ex\" style=\"vertical-align: -0.838ex;\" viewbox=\"0 -863.1 2383.5 1223.9\" role=\"img\" focusable=\"false\" xmlns=\"http://www.w3.org/2000/svg\" aria-labelledby=\"MathJax-SVG-1-Title\">\n<title id=\"MathJax-SVG-1-Title\">(expr </title>\n<defs aria-hidden=\"true\">\n<path stroke-width=\"1\" id=\"E1-MJMAIN-28\" d=\"M94 250Q94 319 104 381T127 488T164 576T202 643T244 695T277 729T302 750H315H319Q333 750 333 741Q333 738 316 720T275 667T226 581T184 443T167 250T184 58T225 -81T274 -167T316 -220T333 -241Q333 -250 318 -250H315H302L274 -226Q180 -141 137 -14T94 250Z\"/>\n<path stroke-width=\"1\" id=\"E1-MJMATHI-65\" d=\"M39 168Q39 225 58 272T107 350T174 402T244 433T307 442H310Q355 442 388 420T421 355Q421 265 310 237Q261 224 176 223Q139 223 138 221Q138 219 132 186T125 128Q125 81 146 54T209 26T302 45T394 111Q403 121 406 121Q410 121 419 112T429 98T420 82T390 55T344 24T281 -1T205 -11Q126 -11 83 42T39 168ZM373 353Q367 405 305 405Q272 405 244 391T199 357T170 316T154 280T149 261Q149 260 169 260Q282 260 327 284T373 353Z\"/>\n<path stroke-width=\"1\" id=\"E1-MJMATHI-78\" d=\"M52 289Q59 331 106 386T222 442Q257 442 286 424T329 379Q371 442 430 442Q467 442 494 420T522 361Q522 332 508 314T481 292T458 288Q439 288 427 299T415 328Q415 374 465 391Q454 404 425 404Q412 404 406 402Q368 386 350 336Q290 115 290 78Q290 50 306 38T341 26Q378 26 414 59T463 140Q466 150 469 151T485 153H489Q504 153 504 145Q504 144 502 134Q486 77 440 33T333 -11Q263 -11 227 52Q186 -10 133 -10H127Q78 -10 57 16T35 71Q35 103 54 123T99 143Q142 143 142 101Q142 81 130 66T107 46T94 41L91 40Q91 39 97 36T113 29T132 26Q168 26 194 71Q203 87 217 139T245 247T261 313Q266 340 266 352Q266 380 251 392T217 404Q177 404 142 372T93 290Q91 281 88 280T72 278H58Q52 284 52 289Z\"/>\n<path stroke-width=\"1\" id=\"E1-MJMATHI-70\" d=\"M23 287Q24 290 25 295T30 317T40 348T55 381T75 411T101 433T134 442Q209 442 230 378L240 387Q302 442 358 442Q423 442 460 395T497 281Q497 173 421 82T249 -10Q227 -10 210 -4Q199 1 187 11T168 28L161 36Q160 35 139 -51T118 -138Q118 -144 126 -145T163 -148H188Q194 -155 194 -157T191 -175Q188 -187 185 -190T172 -194Q170 -194 161 -194T127 -193T65 -192Q-5 -192 -24 -194H-32Q-39 -187 -39 -183Q-37 -156 -26 -148H-6Q28 -147 33 -136Q36 -130 94 103T155 350Q156 355 156 364Q156 405 131 405Q109 405 94 377T71 316T59 280Q57 278 43 278H29Q23 284 23 287ZM178 102Q200 26 252 26Q282 26 310 49T356 107Q374 141 392 215T411 325V331Q411 405 350 405Q339 405 328 402T306 393T286 380T269 365T254 350T243 336T235 326L232 322Q232 321 229 308T218 264T204 212Q178 106 178 102Z\"/>\n<path stroke-width=\"1\" id=\"E1-MJMATHI-72\" d=\"M21 287Q22 290 23 295T28 317T38 348T53 381T73 411T99 433T132 442Q161 442 183 430T214 408T225 388Q227 382 228 382T236 389Q284 441 347 441H350Q398 441 422 400Q430 381 430 363Q430 333 417 315T391 292T366 288Q346 288 334 299T322 328Q322 376 378 392Q356 405 342 405Q286 405 239 331Q229 315 224 298T190 165Q156 25 151 16Q138 -11 108 -11Q95 -11 87 -5T76 7T74 17Q74 30 114 189T154 366Q154 405 128 405Q107 405 92 377T68 316T57 280Q55 278 41 278H27Q21 284 21 287Z\"/>\n</defs>\n<g stroke=\"currentColor\" fill=\"currentColor\" stroke-width=\"0\" transform=\"matrix(1 0 0 -1 0 0)\" aria-hidden=\"true\">\n <use xlink:href=\"#E1-MJMAIN-28\" x=\"0\" y=\"0\"/>\n <use xlink:href=\"#E1-MJMATHI-65\" x=\"389\" y=\"0\"/>\n <use xlink:href=\"#E1-MJMATHI-78\" x=\"856\" y=\"0\"/>\n <use xlink:href=\"#E1-MJMATHI-70\" x=\"1428\" y=\"0\"/>\n <use xlink:href=\"#E1-MJMATHI-72\" x=\"1932\" y=\"0\"/>\n</g>\n</svg>x +1)<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n<h2 id=\"字符串操作\">字符串操作<a title=\"#字符串操作\" href=\"#字符串操作\"></a></h2>\n<p><strong>字符串长度</strong></p>\n<pre class=\"line-numbers language-bash\" data-language=\"bash\"><code class=\"language-bash\">expr length $stringZ\nexpr &quot;$stringZ&quot; : &#39;.*&#39;\t# 这里其实是子串匹配的特殊情况(正则表达式匹配了所有字符)\n$&#123;#stringZ&#125;\t\t# #号的意思是集合内元素的个数(在这里就是字符串的长度)\n\n|---例子---|\nstringZ&#x3D;abcABC123ABCabc\n$&#123;#stringZ&#125;\nexpr length $stringZ\nexpr &quot;$stringZ&quot; : &#39;.*&#39;<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n<p><strong>匹配子串长度</strong></p>\n<p>从字符串开始的位置匹配子串的长度</p>\n<pre class=\"line-numbers language-bash\" data-language=\"bash\"><code class=\"language-bash\">expr match &quot;<svg xmlns:xlink=\"http://www.w3.org/1999/xlink\" width=\"8.784ex\" height=\"2.843ex\" style=\"vertical-align: -0.671ex;\" viewbox=\"0 -934.9 3782.1 1223.9\" role=\"img\" focusable=\"false\" xmlns=\"http://www.w3.org/2000/svg\" aria-labelledby=\"MathJax-SVG-1-Title\">\n<title id=\"MathJax-SVG-1-Title\">string\" '</title>\n<defs aria-hidden=\"true\">\n<path stroke-width=\"1\" id=\"E1-MJMATHI-73\" d=\"M131 289Q131 321 147 354T203 415T300 442Q362 442 390 415T419 355Q419 323 402 308T364 292Q351 292 340 300T328 326Q328 342 337 354T354 372T367 378Q368 378 368 379Q368 382 361 388T336 399T297 405Q249 405 227 379T204 326Q204 301 223 291T278 274T330 259Q396 230 396 163Q396 135 385 107T352 51T289 7T195 -10Q118 -10 86 19T53 87Q53 126 74 143T118 160Q133 160 146 151T160 120Q160 94 142 76T111 58Q109 57 108 57T107 55Q108 52 115 47T146 34T201 27Q237 27 263 38T301 66T318 97T323 122Q323 150 302 164T254 181T195 196T148 231Q131 256 131 289Z\"/>\n<path stroke-width=\"1\" id=\"E1-MJMATHI-74\" d=\"M26 385Q19 392 19 395Q19 399 22 411T27 425Q29 430 36 430T87 431H140L159 511Q162 522 166 540T173 566T179 586T187 603T197 615T211 624T229 626Q247 625 254 615T261 596Q261 589 252 549T232 470L222 433Q222 431 272 431H323Q330 424 330 420Q330 398 317 385H210L174 240Q135 80 135 68Q135 26 162 26Q197 26 230 60T283 144Q285 150 288 151T303 153H307Q322 153 322 145Q322 142 319 133Q314 117 301 95T267 48T216 6T155 -11Q125 -11 98 4T59 56Q57 64 57 83V101L92 241Q127 382 128 383Q128 385 77 385H26Z\"/>\n<path stroke-width=\"1\" id=\"E1-MJMATHI-72\" d=\"M21 287Q22 290 23 295T28 317T38 348T53 381T73 411T99 433T132 442Q161 442 183 430T214 408T225 388Q227 382 228 382T236 389Q284 441 347 441H350Q398 441 422 400Q430 381 430 363Q430 333 417 315T391 292T366 288Q346 288 334 299T322 328Q322 376 378 392Q356 405 342 405Q286 405 239 331Q229 315 224 298T190 165Q156 25 151 16Q138 -11 108 -11Q95 -11 87 -5T76 7T74 17Q74 30 114 189T154 366Q154 405 128 405Q107 405 92 377T68 316T57 280Q55 278 41 278H27Q21 284 21 287Z\"/>\n<path stroke-width=\"1\" id=\"E1-MJMATHI-69\" d=\"M184 600Q184 624 203 642T247 661Q265 661 277 649T290 619Q290 596 270 577T226 557Q211 557 198 567T184 600ZM21 287Q21 295 30 318T54 369T98 420T158 442Q197 442 223 419T250 357Q250 340 236 301T196 196T154 83Q149 61 149 51Q149 26 166 26Q175 26 185 29T208 43T235 78T260 137Q263 149 265 151T282 153Q302 153 302 143Q302 135 293 112T268 61T223 11T161 -11Q129 -11 102 10T74 74Q74 91 79 106T122 220Q160 321 166 341T173 380Q173 404 156 404H154Q124 404 99 371T61 287Q60 286 59 284T58 281T56 279T53 278T49 278T41 278H27Q21 284 21 287Z\"/>\n<path stroke-width=\"1\" id=\"E1-MJMATHI-6E\" d=\"M21 287Q22 293 24 303T36 341T56 388T89 425T135 442Q171 442 195 424T225 390T231 369Q231 367 232 367L243 378Q304 442 382 442Q436 442 469 415T503 336T465 179T427 52Q427 26 444 26Q450 26 453 27Q482 32 505 65T540 145Q542 153 560 153Q580 153 580 145Q580 144 576 130Q568 101 554 73T508 17T439 -10Q392 -10 371 17T350 73Q350 92 386 193T423 345Q423 404 379 404H374Q288 404 229 303L222 291L189 157Q156 26 151 16Q138 -11 108 -11Q95 -11 87 -5T76 7T74 17Q74 30 112 180T152 343Q153 348 153 366Q153 405 129 405Q91 405 66 305Q60 285 60 284Q58 278 41 278H27Q21 284 21 287Z\"/>\n<path stroke-width=\"1\" id=\"E1-MJMATHI-67\" d=\"M311 43Q296 30 267 15T206 0Q143 0 105 45T66 160Q66 265 143 353T314 442Q361 442 401 394L404 398Q406 401 409 404T418 412T431 419T447 422Q461 422 470 413T480 394Q480 379 423 152T363 -80Q345 -134 286 -169T151 -205Q10 -205 10 -137Q10 -111 28 -91T74 -71Q89 -71 102 -80T116 -111Q116 -121 114 -130T107 -144T99 -154T92 -162L90 -164H91Q101 -167 151 -167Q189 -167 211 -155Q234 -144 254 -122T282 -75Q288 -56 298 -13Q311 35 311 43ZM384 328L380 339Q377 350 375 354T369 368T359 382T346 393T328 402T306 405Q262 405 221 352Q191 313 171 233T151 117Q151 38 213 38Q269 38 323 108L331 118L384 328Z\"/>\n<path stroke-width=\"1\" id=\"E1-MJMAIN-22\" d=\"M34 634Q34 659 50 676T93 694Q121 694 144 668T168 579Q168 525 146 476T101 403T73 379Q69 379 60 388T50 401Q50 404 62 417T88 448T116 500T131 572Q131 584 130 584T125 581T112 576T94 573Q69 573 52 590T34 634ZM238 634Q238 659 254 676T297 694Q325 694 348 668T372 579Q372 525 350 476T305 403T277 379Q273 379 264 388T254 401Q254 404 266 417T292 448T320 500T335 572Q335 584 334 584T329 581T316 576T298 573Q273 573 256 590T238 634Z\"/>\n<path stroke-width=\"1\" id=\"E1-MJMAIN-2032\" d=\"M79 43Q73 43 52 49T30 61Q30 68 85 293T146 528Q161 560 198 560Q218 560 240 545T262 501Q262 496 260 486Q259 479 173 263T84 45T79 43Z\"/>\n</defs>\n<g stroke=\"currentColor\" fill=\"currentColor\" stroke-width=\"0\" transform=\"matrix(1 0 0 -1 0 0)\" aria-hidden=\"true\">\n <use xlink:href=\"#E1-MJMATHI-73\" x=\"0\" y=\"0\"/>\n <use xlink:href=\"#E1-MJMATHI-74\" x=\"469\" y=\"0\"/>\n <use xlink:href=\"#E1-MJMATHI-72\" x=\"831\" y=\"0\"/>\n <use xlink:href=\"#E1-MJMATHI-69\" x=\"1282\" y=\"0\"/>\n <use xlink:href=\"#E1-MJMATHI-6E\" x=\"1628\" y=\"0\"/>\n <use xlink:href=\"#E1-MJMATHI-67\" x=\"2228\" y=\"0\"/>\n<g transform=\"translate(2986,0)\">\n <use xlink:href=\"#E1-MJMAIN-22\" x=\"0\" y=\"0\"/>\n <use transform=\"scale(0.707)\" xlink:href=\"#E1-MJMAIN-2032\" x=\"707\" y=\"583\"/>\n</g>\n</g>\n</svg>substring’\t# $substring 是一个正则表达式\nexpr match &quot;$string\" '\\($substring\\)&#39;\nexpr &quot;<svg xmlns:xlink=\"http://www.w3.org/1999/xlink\" width=\"9.431ex\" height=\"2.843ex\" style=\"vertical-align: -0.671ex;\" viewbox=\"0 -934.9 4060.6 1223.9\" role=\"img\" focusable=\"false\" xmlns=\"http://www.w3.org/2000/svg\" aria-labelledby=\"MathJax-SVG-1-Title\">\n<title id=\"MathJax-SVG-1-Title\">string\" : '</title>\n<defs aria-hidden=\"true\">\n<path stroke-width=\"1\" id=\"E1-MJMATHI-73\" d=\"M131 289Q131 321 147 354T203 415T300 442Q362 442 390 415T419 355Q419 323 402 308T364 292Q351 292 340 300T328 326Q328 342 337 354T354 372T367 378Q368 378 368 379Q368 382 361 388T336 399T297 405Q249 405 227 379T204 326Q204 301 223 291T278 274T330 259Q396 230 396 163Q396 135 385 107T352 51T289 7T195 -10Q118 -10 86 19T53 87Q53 126 74 143T118 160Q133 160 146 151T160 120Q160 94 142 76T111 58Q109 57 108 57T107 55Q108 52 115 47T146 34T201 27Q237 27 263 38T301 66T318 97T323 122Q323 150 302 164T254 181T195 196T148 231Q131 256 131 289Z\"/>\n<path stroke-width=\"1\" id=\"E1-MJMATHI-74\" d=\"M26 385Q19 392 19 395Q19 399 22 411T27 425Q29 430 36 430T87 431H140L159 511Q162 522 166 540T173 566T179 586T187 603T197 615T211 624T229 626Q247 625 254 615T261 596Q261 589 252 549T232 470L222 433Q222 431 272 431H323Q330 424 330 420Q330 398 317 385H210L174 240Q135 80 135 68Q135 26 162 26Q197 26 230 60T283 144Q285 150 288 151T303 153H307Q322 153 322 145Q322 142 319 133Q314 117 301 95T267 48T216 6T155 -11Q125 -11 98 4T59 56Q57 64 57 83V101L92 241Q127 382 128 383Q128 385 77 385H26Z\"/>\n<path stroke-width=\"1\" id=\"E1-MJMATHI-72\" d=\"M21 287Q22 290 23 295T28 317T38 348T53 381T73 411T99 433T132 442Q161 442 183 430T214 408T225 388Q227 382 228 382T236 389Q284 441 347 441H350Q398 441 422 400Q430 381 430 363Q430 333 417 315T391 292T366 288Q346 288 334 299T322 328Q322 376 378 392Q356 405 342 405Q286 405 239 331Q229 315 224 298T190 165Q156 25 151 16Q138 -11 108 -11Q95 -11 87 -5T76 7T74 17Q74 30 114 189T154 366Q154 405 128 405Q107 405 92 377T68 316T57 280Q55 278 41 278H27Q21 284 21 287Z\"/>\n<path stroke-width=\"1\" id=\"E1-MJMATHI-69\" d=\"M184 600Q184 624 203 642T247 661Q265 661 277 649T290 619Q290 596 270 577T226 557Q211 557 198 567T184 600ZM21 287Q21 295 30 318T54 369T98 420T158 442Q197 442 223 419T250 357Q250 340 236 301T196 196T154 83Q149 61 149 51Q149 26 166 26Q175 26 185 29T208 43T235 78T260 137Q263 149 265 151T282 153Q302 153 302 143Q302 135 293 112T268 61T223 11T161 -11Q129 -11 102 10T74 74Q74 91 79 106T122 220Q160 321 166 341T173 380Q173 404 156 404H154Q124 404 99 371T61 287Q60 286 59 284T58 281T56 279T53 278T49 278T41 278H27Q21 284 21 287Z\"/>\n<path stroke-width=\"1\" id=\"E1-MJMATHI-6E\" d=\"M21 287Q22 293 24 303T36 341T56 388T89 425T135 442Q171 442 195 424T225 390T231 369Q231 367 232 367L243 378Q304 442 382 442Q436 442 469 415T503 336T465 179T427 52Q427 26 444 26Q450 26 453 27Q482 32 505 65T540 145Q542 153 560 153Q580 153 580 145Q580 144 576 130Q568 101 554 73T508 17T439 -10Q392 -10 371 17T350 73Q350 92 386 193T423 345Q423 404 379 404H374Q288 404 229 303L222 291L189 157Q156 26 151 16Q138 -11 108 -11Q95 -11 87 -5T76 7T74 17Q74 30 112 180T152 343Q153 348 153 366Q153 405 129 405Q91 405 66 305Q60 285 60 284Q58 278 41 278H27Q21 284 21 287Z\"/>\n<path stroke-width=\"1\" id=\"E1-MJMATHI-67\" d=\"M311 43Q296 30 267 15T206 0Q143 0 105 45T66 160Q66 265 143 353T314 442Q361 442 401 394L404 398Q406 401 409 404T418 412T431 419T447 422Q461 422 470 413T480 394Q480 379 423 152T363 -80Q345 -134 286 -169T151 -205Q10 -205 10 -137Q10 -111 28 -91T74 -71Q89 -71 102 -80T116 -111Q116 -121 114 -130T107 -144T99 -154T92 -162L90 -164H91Q101 -167 151 -167Q189 -167 211 -155Q234 -144 254 -122T282 -75Q288 -56 298 -13Q311 35 311 43ZM384 328L380 339Q377 350 375 354T369 368T359 382T346 393T328 402T306 405Q262 405 221 352Q191 313 171 233T151 117Q151 38 213 38Q269 38 323 108L331 118L384 328Z\"/>\n<path stroke-width=\"1\" id=\"E1-MJMAIN-22\" d=\"M34 634Q34 659 50 676T93 694Q121 694 144 668T168 579Q168 525 146 476T101 403T73 379Q69 379 60 388T50 401Q50 404 62 417T88 448T116 500T131 572Q131 584 130 584T125 581T112 576T94 573Q69 573 52 590T34 634ZM238 634Q238 659 254 676T297 694Q325 694 348 668T372 579Q372 525 350 476T305 403T277 379Q273 379 264 388T254 401Q254 404 266 417T292 448T320 500T335 572Q335 584 334 584T329 581T316 576T298 573Q273 573 256 590T238 634Z\"/>\n<path stroke-width=\"1\" id=\"E1-MJMAIN-3A\" d=\"M78 370Q78 394 95 412T138 430Q162 430 180 414T199 371Q199 346 182 328T139 310T96 327T78 370ZM78 60Q78 84 95 102T138 120Q162 120 180 104T199 61Q199 36 182 18T139 0T96 17T78 60Z\"/>\n<path stroke-width=\"1\" id=\"E1-MJMAIN-2032\" d=\"M79 43Q73 43 52 49T30 61Q30 68 85 293T146 528Q161 560 198 560Q218 560 240 545T262 501Q262 496 260 486Q259 479 173 263T84 45T79 43Z\"/>\n</defs>\n<g stroke=\"currentColor\" fill=\"currentColor\" stroke-width=\"0\" transform=\"matrix(1 0 0 -1 0 0)\" aria-hidden=\"true\">\n <use xlink:href=\"#E1-MJMATHI-73\" x=\"0\" y=\"0\"/>\n <use xlink:href=\"#E1-MJMATHI-74\" x=\"469\" y=\"0\"/>\n <use xlink:href=\"#E1-MJMATHI-72\" x=\"831\" y=\"0\"/>\n <use xlink:href=\"#E1-MJMATHI-69\" x=\"1282\" y=\"0\"/>\n <use xlink:href=\"#E1-MJMATHI-6E\" x=\"1628\" y=\"0\"/>\n <use xlink:href=\"#E1-MJMATHI-67\" x=\"2228\" y=\"0\"/>\n <use xlink:href=\"#E1-MJMAIN-22\" x=\"2986\" y=\"0\"/>\n<g transform=\"translate(3487,0)\">\n <use xlink:href=\"#E1-MJMAIN-3A\" x=\"0\" y=\"0\"/>\n <use transform=\"scale(0.707)\" xlink:href=\"#E1-MJMAIN-2032\" x=\"393\" y=\"583\"/>\n</g>\n</g>\n</svg>substring’\n\n|---例子---|\necho &#96;expr match &quot;$stringZ&quot; &#39;abc[A-Z]*.2&#39;&#96; \n&gt;&gt; 8 # abcABC12\necho &#96;expr &quot;$stringZ&quot; : &#39;abc[A-Z]*.2&#39;&#96;\n&gt;&gt; 8 # abcABC12\necho &#96;expr match &quot;$stringZ&quot; &#39;abc[A-Z]*&#39;&#96; \n&gt;&gt; 6 # abcABC<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n<p><strong>索引匹配</strong></p>\n<p>匹配到子串的第一个字符出现的位置，<strong>注意</strong></p>\n<ul>\n<li>索引从1开始</li>\n<li>子串是单个字符的集合，索引匹配的机理是：在母串顺序查找字符x，如果x在字串出现过，就停止查找，返回x的索引</li>\n</ul>\n<pre class=\"line-numbers language-bash\" data-language=\"bash\"><code class=\"language-bash\">expr index <svg xmlns:xlink=\"http://www.w3.org/1999/xlink\" width=\"6.292ex\" height=\"2.509ex\" style=\"vertical-align: -0.671ex;\" viewbox=\"0 -791.3 2709 1080.4\" role=\"img\" focusable=\"false\" xmlns=\"http://www.w3.org/2000/svg\" aria-labelledby=\"MathJax-SVG-1-Title\">\n<title id=\"MathJax-SVG-1-Title\">string </title>\n<defs aria-hidden=\"true\">\n<path stroke-width=\"1\" id=\"E1-MJMATHI-73\" d=\"M131 289Q131 321 147 354T203 415T300 442Q362 442 390 415T419 355Q419 323 402 308T364 292Q351 292 340 300T328 326Q328 342 337 354T354 372T367 378Q368 378 368 379Q368 382 361 388T336 399T297 405Q249 405 227 379T204 326Q204 301 223 291T278 274T330 259Q396 230 396 163Q396 135 385 107T352 51T289 7T195 -10Q118 -10 86 19T53 87Q53 126 74 143T118 160Q133 160 146 151T160 120Q160 94 142 76T111 58Q109 57 108 57T107 55Q108 52 115 47T146 34T201 27Q237 27 263 38T301 66T318 97T323 122Q323 150 302 164T254 181T195 196T148 231Q131 256 131 289Z\"/>\n<path stroke-width=\"1\" id=\"E1-MJMATHI-74\" d=\"M26 385Q19 392 19 395Q19 399 22 411T27 425Q29 430 36 430T87 431H140L159 511Q162 522 166 540T173 566T179 586T187 603T197 615T211 624T229 626Q247 625 254 615T261 596Q261 589 252 549T232 470L222 433Q222 431 272 431H323Q330 424 330 420Q330 398 317 385H210L174 240Q135 80 135 68Q135 26 162 26Q197 26 230 60T283 144Q285 150 288 151T303 153H307Q322 153 322 145Q322 142 319 133Q314 117 301 95T267 48T216 6T155 -11Q125 -11 98 4T59 56Q57 64 57 83V101L92 241Q127 382 128 383Q128 385 77 385H26Z\"/>\n<path stroke-width=\"1\" id=\"E1-MJMATHI-72\" d=\"M21 287Q22 290 23 295T28 317T38 348T53 381T73 411T99 433T132 442Q161 442 183 430T214 408T225 388Q227 382 228 382T236 389Q284 441 347 441H350Q398 441 422 400Q430 381 430 363Q430 333 417 315T391 292T366 288Q346 288 334 299T322 328Q322 376 378 392Q356 405 342 405Q286 405 239 331Q229 315 224 298T190 165Q156 25 151 16Q138 -11 108 -11Q95 -11 87 -5T76 7T74 17Q74 30 114 189T154 366Q154 405 128 405Q107 405 92 377T68 316T57 280Q55 278 41 278H27Q21 284 21 287Z\"/>\n<path stroke-width=\"1\" id=\"E1-MJMATHI-69\" d=\"M184 600Q184 624 203 642T247 661Q265 661 277 649T290 619Q290 596 270 577T226 557Q211 557 198 567T184 600ZM21 287Q21 295 30 318T54 369T98 420T158 442Q197 442 223 419T250 357Q250 340 236 301T196 196T154 83Q149 61 149 51Q149 26 166 26Q175 26 185 29T208 43T235 78T260 137Q263 149 265 151T282 153Q302 153 302 143Q302 135 293 112T268 61T223 11T161 -11Q129 -11 102 10T74 74Q74 91 79 106T122 220Q160 321 166 341T173 380Q173 404 156 404H154Q124 404 99 371T61 287Q60 286 59 284T58 281T56 279T53 278T49 278T41 278H27Q21 284 21 287Z\"/>\n<path stroke-width=\"1\" id=\"E1-MJMATHI-6E\" d=\"M21 287Q22 293 24 303T36 341T56 388T89 425T135 442Q171 442 195 424T225 390T231 369Q231 367 232 367L243 378Q304 442 382 442Q436 442 469 415T503 336T465 179T427 52Q427 26 444 26Q450 26 453 27Q482 32 505 65T540 145Q542 153 560 153Q580 153 580 145Q580 144 576 130Q568 101 554 73T508 17T439 -10Q392 -10 371 17T350 73Q350 92 386 193T423 345Q423 404 379 404H374Q288 404 229 303L222 291L189 157Q156 26 151 16Q138 -11 108 -11Q95 -11 87 -5T76 7T74 17Q74 30 112 180T152 343Q153 348 153 366Q153 405 129 405Q91 405 66 305Q60 285 60 284Q58 278 41 278H27Q21 284 21 287Z\"/>\n<path stroke-width=\"1\" id=\"E1-MJMATHI-67\" d=\"M311 43Q296 30 267 15T206 0Q143 0 105 45T66 160Q66 265 143 353T314 442Q361 442 401 394L404 398Q406 401 409 404T418 412T431 419T447 422Q461 422 470 413T480 394Q480 379 423 152T363 -80Q345 -134 286 -169T151 -205Q10 -205 10 -137Q10 -111 28 -91T74 -71Q89 -71 102 -80T116 -111Q116 -121 114 -130T107 -144T99 -154T92 -162L90 -164H91Q101 -167 151 -167Q189 -167 211 -155Q234 -144 254 -122T282 -75Q288 -56 298 -13Q311 35 311 43ZM384 328L380 339Q377 350 375 354T369 368T359 382T346 393T328 402T306 405Q262 405 221 352Q191 313 171 233T151 117Q151 38 213 38Q269 38 323 108L331 118L384 328Z\"/>\n</defs>\n<g stroke=\"currentColor\" fill=\"currentColor\" stroke-width=\"0\" transform=\"matrix(1 0 0 -1 0 0)\" aria-hidden=\"true\">\n <use xlink:href=\"#E1-MJMATHI-73\" x=\"0\" y=\"0\"/>\n <use xlink:href=\"#E1-MJMATHI-74\" x=\"469\" y=\"0\"/>\n <use xlink:href=\"#E1-MJMATHI-72\" x=\"831\" y=\"0\"/>\n <use xlink:href=\"#E1-MJMATHI-69\" x=\"1282\" y=\"0\"/>\n <use xlink:href=\"#E1-MJMATHI-6E\" x=\"1628\" y=\"0\"/>\n <use xlink:href=\"#E1-MJMATHI-67\" x=\"2228\" y=\"0\"/>\n</g>\n</svg>substring\n\n|---例子---|\nstringZ&#x3D;abcABC123ABCabc \necho &#96;expr index &quot;$stringZ&quot; C12&#96;\n&gt;&gt; 6\necho &#96;expr index &quot;$stringZ&quot; 1c&#96; \n&gt;&gt; 3\necho &#96;expr index &quot;$stringZ&quot; 2c&#96; \n&gt;&gt; 3\necho &#96;expr index &quot;$stringZ&quot; b2c&#96; \n&gt;&gt; 2\necho &#96;expr index &quot;$stringZ&quot; a45c&#96;\n&gt;&gt; 1<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n<p><strong>子串提取</strong></p>\n<pre class=\"line-numbers language-bash\" data-language=\"bash\"><code class=\"language-bash\">expr substr <svg xmlns:xlink=\"http://www.w3.org/1999/xlink\" width=\"6.292ex\" height=\"2.509ex\" style=\"vertical-align: -0.671ex;\" viewbox=\"0 -791.3 2709 1080.4\" role=\"img\" focusable=\"false\" xmlns=\"http://www.w3.org/2000/svg\" aria-labelledby=\"MathJax-SVG-1-Title\">\n<title id=\"MathJax-SVG-1-Title\">string </title>\n<defs aria-hidden=\"true\">\n<path stroke-width=\"1\" id=\"E1-MJMATHI-73\" d=\"M131 289Q131 321 147 354T203 415T300 442Q362 442 390 415T419 355Q419 323 402 308T364 292Q351 292 340 300T328 326Q328 342 337 354T354 372T367 378Q368 378 368 379Q368 382 361 388T336 399T297 405Q249 405 227 379T204 326Q204 301 223 291T278 274T330 259Q396 230 396 163Q396 135 385 107T352 51T289 7T195 -10Q118 -10 86 19T53 87Q53 126 74 143T118 160Q133 160 146 151T160 120Q160 94 142 76T111 58Q109 57 108 57T107 55Q108 52 115 47T146 34T201 27Q237 27 263 38T301 66T318 97T323 122Q323 150 302 164T254 181T195 196T148 231Q131 256 131 289Z\"/>\n<path stroke-width=\"1\" id=\"E1-MJMATHI-74\" d=\"M26 385Q19 392 19 395Q19 399 22 411T27 425Q29 430 36 430T87 431H140L159 511Q162 522 166 540T173 566T179 586T187 603T197 615T211 624T229 626Q247 625 254 615T261 596Q261 589 252 549T232 470L222 433Q222 431 272 431H323Q330 424 330 420Q330 398 317 385H210L174 240Q135 80 135 68Q135 26 162 26Q197 26 230 60T283 144Q285 150 288 151T303 153H307Q322 153 322 145Q322 142 319 133Q314 117 301 95T267 48T216 6T155 -11Q125 -11 98 4T59 56Q57 64 57 83V101L92 241Q127 382 128 383Q128 385 77 385H26Z\"/>\n<path stroke-width=\"1\" id=\"E1-MJMATHI-72\" d=\"M21 287Q22 290 23 295T28 317T38 348T53 381T73 411T99 433T132 442Q161 442 183 430T214 408T225 388Q227 382 228 382T236 389Q284 441 347 441H350Q398 441 422 400Q430 381 430 363Q430 333 417 315T391 292T366 288Q346 288 334 299T322 328Q322 376 378 392Q356 405 342 405Q286 405 239 331Q229 315 224 298T190 165Q156 25 151 16Q138 -11 108 -11Q95 -11 87 -5T76 7T74 17Q74 30 114 189T154 366Q154 405 128 405Q107 405 92 377T68 316T57 280Q55 278 41 278H27Q21 284 21 287Z\"/>\n<path stroke-width=\"1\" id=\"E1-MJMATHI-69\" d=\"M184 600Q184 624 203 642T247 661Q265 661 277 649T290 619Q290 596 270 577T226 557Q211 557 198 567T184 600ZM21 287Q21 295 30 318T54 369T98 420T158 442Q197 442 223 419T250 357Q250 340 236 301T196 196T154 83Q149 61 149 51Q149 26 166 26Q175 26 185 29T208 43T235 78T260 137Q263 149 265 151T282 153Q302 153 302 143Q302 135 293 112T268 61T223 11T161 -11Q129 -11 102 10T74 74Q74 91 79 106T122 220Q160 321 166 341T173 380Q173 404 156 404H154Q124 404 99 371T61 287Q60 286 59 284T58 281T56 279T53 278T49 278T41 278H27Q21 284 21 287Z\"/>\n<path stroke-width=\"1\" id=\"E1-MJMATHI-6E\" d=\"M21 287Q22 293 24 303T36 341T56 388T89 425T135 442Q171 442 195 424T225 390T231 369Q231 367 232 367L243 378Q304 442 382 442Q436 442 469 415T503 336T465 179T427 52Q427 26 444 26Q450 26 453 27Q482 32 505 65T540 145Q542 153 560 153Q580 153 580 145Q580 144 576 130Q568 101 554 73T508 17T439 -10Q392 -10 371 17T350 73Q350 92 386 193T423 345Q423 404 379 404H374Q288 404 229 303L222 291L189 157Q156 26 151 16Q138 -11 108 -11Q95 -11 87 -5T76 7T74 17Q74 30 112 180T152 343Q153 348 153 366Q153 405 129 405Q91 405 66 305Q60 285 60 284Q58 278 41 278H27Q21 284 21 287Z\"/>\n<path stroke-width=\"1\" id=\"E1-MJMATHI-67\" d=\"M311 43Q296 30 267 15T206 0Q143 0 105 45T66 160Q66 265 143 353T314 442Q361 442 401 394L404 398Q406 401 409 404T418 412T431 419T447 422Q461 422 470 413T480 394Q480 379 423 152T363 -80Q345 -134 286 -169T151 -205Q10 -205 10 -137Q10 -111 28 -91T74 -71Q89 -71 102 -80T116 -111Q116 -121 114 -130T107 -144T99 -154T92 -162L90 -164H91Q101 -167 151 -167Q189 -167 211 -155Q234 -144 254 -122T282 -75Q288 -56 298 -13Q311 35 311 43ZM384 328L380 339Q377 350 375 354T369 368T359 382T346 393T328 402T306 405Q262 405 221 352Q191 313 171 233T151 117Q151 38 213 38Q269 38 323 108L331 118L384 328Z\"/>\n</defs>\n<g stroke=\"currentColor\" fill=\"currentColor\" stroke-width=\"0\" transform=\"matrix(1 0 0 -1 0 0)\" aria-hidden=\"true\">\n <use xlink:href=\"#E1-MJMATHI-73\" x=\"0\" y=\"0\"/>\n <use xlink:href=\"#E1-MJMATHI-74\" x=\"469\" y=\"0\"/>\n <use xlink:href=\"#E1-MJMATHI-72\" x=\"831\" y=\"0\"/>\n <use xlink:href=\"#E1-MJMATHI-69\" x=\"1282\" y=\"0\"/>\n <use xlink:href=\"#E1-MJMATHI-6E\" x=\"1628\" y=\"0\"/>\n <use xlink:href=\"#E1-MJMATHI-67\" x=\"2228\" y=\"0\"/>\n</g>\n</svg>position $length\n# 在 string 中从位置<svg xmlns:xlink=\"http://www.w3.org/1999/xlink\" width=\"26.811ex\" height=\"3.343ex\" style=\"vertical-align: -1.171ex; margin-left: -0.089ex;\" viewbox=\"-38.5 -934.9 11543.6 1439.2\" role=\"img\" focusable=\"false\" xmlns=\"http://www.w3.org/2000/svg\" aria-labelledby=\"MathJax-SVG-1-Title\">\n<title id=\"MathJax-SVG-1-Title\">position 开始提取子串. 如果</title>\n<defs aria-hidden=\"true\">\n<path stroke-width=\"1\" id=\"E1-MJMATHI-70\" d=\"M23 287Q24 290 25 295T30 317T40 348T55 381T75 411T101 433T134 442Q209 442 230 378L240 387Q302 442 358 442Q423 442 460 395T497 281Q497 173 421 82T249 -10Q227 -10 210 -4Q199 1 187 11T168 28L161 36Q160 35 139 -51T118 -138Q118 -144 126 -145T163 -148H188Q194 -155 194 -157T191 -175Q188 -187 185 -190T172 -194Q170 -194 161 -194T127 -193T65 -192Q-5 -192 -24 -194H-32Q-39 -187 -39 -183Q-37 -156 -26 -148H-6Q28 -147 33 -136Q36 -130 94 103T155 350Q156 355 156 364Q156 405 131 405Q109 405 94 377T71 316T59 280Q57 278 43 278H29Q23 284 23 287ZM178 102Q200 26 252 26Q282 26 310 49T356 107Q374 141 392 215T411 325V331Q411 405 350 405Q339 405 328 402T306 393T286 380T269 365T254 350T243 336T235 326L232 322Q232 321 229 308T218 264T204 212Q178 106 178 102Z\"/>\n<path stroke-width=\"1\" id=\"E1-MJMATHI-6F\" d=\"M201 -11Q126 -11 80 38T34 156Q34 221 64 279T146 380Q222 441 301 441Q333 441 341 440Q354 437 367 433T402 417T438 387T464 338T476 268Q476 161 390 75T201 -11ZM121 120Q121 70 147 48T206 26Q250 26 289 58T351 142Q360 163 374 216T388 308Q388 352 370 375Q346 405 306 405Q243 405 195 347Q158 303 140 230T121 120Z\"/>\n<path stroke-width=\"1\" id=\"E1-MJMATHI-73\" d=\"M131 289Q131 321 147 354T203 415T300 442Q362 442 390 415T419 355Q419 323 402 308T364 292Q351 292 340 300T328 326Q328 342 337 354T354 372T367 378Q368 378 368 379Q368 382 361 388T336 399T297 405Q249 405 227 379T204 326Q204 301 223 291T278 274T330 259Q396 230 396 163Q396 135 385 107T352 51T289 7T195 -10Q118 -10 86 19T53 87Q53 126 74 143T118 160Q133 160 146 151T160 120Q160 94 142 76T111 58Q109 57 108 57T107 55Q108 52 115 47T146 34T201 27Q237 27 263 38T301 66T318 97T323 122Q323 150 302 164T254 181T195 196T148 231Q131 256 131 289Z\"/>\n<path stroke-width=\"1\" id=\"E1-MJMATHI-69\" d=\"M184 600Q184 624 203 642T247 661Q265 661 277 649T290 619Q290 596 270 577T226 557Q211 557 198 567T184 600ZM21 287Q21 295 30 318T54 369T98 420T158 442Q197 442 223 419T250 357Q250 340 236 301T196 196T154 83Q149 61 149 51Q149 26 166 26Q175 26 185 29T208 43T235 78T260 137Q263 149 265 151T282 153Q302 153 302 143Q302 135 293 112T268 61T223 11T161 -11Q129 -11 102 10T74 74Q74 91 79 106T122 220Q160 321 166 341T173 380Q173 404 156 404H154Q124 404 99 371T61 287Q60 286 59 284T58 281T56 279T53 278T49 278T41 278H27Q21 284 21 287Z\"/>\n<path stroke-width=\"1\" id=\"E1-MJMATHI-74\" d=\"M26 385Q19 392 19 395Q19 399 22 411T27 425Q29 430 36 430T87 431H140L159 511Q162 522 166 540T173 566T179 586T187 603T197 615T211 624T229 626Q247 625 254 615T261 596Q261 589 252 549T232 470L222 433Q222 431 272 431H323Q330 424 330 420Q330 398 317 385H210L174 240Q135 80 135 68Q135 26 162 26Q197 26 230 60T283 144Q285 150 288 151T303 153H307Q322 153 322 145Q322 142 319 133Q314 117 301 95T267 48T216 6T155 -11Q125 -11 98 4T59 56Q57 64 57 83V101L92 241Q127 382 128 383Q128 385 77 385H26Z\"/>\n<path stroke-width=\"1\" id=\"E1-MJMATHI-6E\" d=\"M21 287Q22 293 24 303T36 341T56 388T89 425T135 442Q171 442 195 424T225 390T231 369Q231 367 232 367L243 378Q304 442 382 442Q436 442 469 415T503 336T465 179T427 52Q427 26 444 26Q450 26 453 27Q482 32 505 65T540 145Q542 153 560 153Q580 153 580 145Q580 144 576 130Q568 101 554 73T508 17T439 -10Q392 -10 371 17T350 73Q350 92 386 193T423 345Q423 404 379 404H374Q288 404 229 303L222 291L189 157Q156 26 151 16Q138 -11 108 -11Q95 -11 87 -5T76 7T74 17Q74 30 112 180T152 343Q153 348 153 366Q153 405 129 405Q91 405 66 305Q60 285 60 284Q58 278 41 278H27Q21 284 21 287Z\"/>\n<path stroke-width=\"1\" id=\"E1-MJMAIN-2E\" d=\"M78 60Q78 84 95 102T138 120Q162 120 180 104T199 61Q199 36 182 18T139 0T96 17T78 60Z\"/>\n</defs>\n<g stroke=\"currentColor\" fill=\"currentColor\" stroke-width=\"0\" transform=\"matrix(1 0 0 -1 0 0)\" aria-hidden=\"true\">\n <use xlink:href=\"#E1-MJMATHI-70\" x=\"0\" y=\"0\"/>\n <use xlink:href=\"#E1-MJMATHI-6F\" x=\"503\" y=\"0\"/>\n <use xlink:href=\"#E1-MJMATHI-73\" x=\"989\" y=\"0\"/>\n <use xlink:href=\"#E1-MJMATHI-69\" x=\"1458\" y=\"0\"/>\n <use xlink:href=\"#E1-MJMATHI-74\" x=\"1804\" y=\"0\"/>\n <use xlink:href=\"#E1-MJMATHI-69\" x=\"2165\" y=\"0\"/>\n <use xlink:href=\"#E1-MJMATHI-6F\" x=\"2511\" y=\"0\"/>\n <use xlink:href=\"#E1-MJMATHI-6E\" x=\"2996\" y=\"0\"/>\n<g transform=\"translate(3597,0)\">\n<text font-family=\"monospace\" stroke=\"none\" transform=\"scale(71.759) matrix(1 0 0 -1 0 0)\">开</text>\n</g>\n<g transform=\"translate(4529,0)\">\n<text font-family=\"monospace\" stroke=\"none\" transform=\"scale(71.759) matrix(1 0 0 -1 0 0)\">始</text>\n</g>\n<g transform=\"translate(5462,0)\">\n<text font-family=\"monospace\" stroke=\"none\" transform=\"scale(71.759) matrix(1 0 0 -1 0 0)\">提</text>\n</g>\n<g transform=\"translate(6395,0)\">\n<text font-family=\"monospace\" stroke=\"none\" transform=\"scale(71.759) matrix(1 0 0 -1 0 0)\">取</text>\n</g>\n<g transform=\"translate(7328,0)\">\n<text font-family=\"monospace\" stroke=\"none\" transform=\"scale(71.759) matrix(1 0 0 -1 0 0)\">子</text>\n</g>\n<g transform=\"translate(8261,0)\">\n<text font-family=\"monospace\" stroke=\"none\" transform=\"scale(71.759) matrix(1 0 0 -1 0 0)\">串</text>\n</g>\n <use xlink:href=\"#E1-MJMAIN-2E\" x=\"9194\" y=\"0\"/>\n<g transform=\"translate(9639,0)\">\n<text font-family=\"monospace\" stroke=\"none\" transform=\"scale(71.759) matrix(1 0 0 -1 0 0)\">如</text>\n</g>\n<g transform=\"translate(10572,0)\">\n<text font-family=\"monospace\" stroke=\"none\" transform=\"scale(71.759) matrix(1 0 0 -1 0 0)\">果</text>\n</g>\n</g>\n</svg>string为“*”或“@”,那么将提取从位置$position 开始的位置参数\n$&#123;string:position&#125;\n# 在 string 中从位置<svg xmlns:xlink=\"http://www.w3.org/1999/xlink\" width=\"17.11ex\" height=\"3.343ex\" style=\"vertical-align: -1.171ex; margin-left: -0.089ex;\" viewbox=\"-38.5 -934.9 7367 1439.2\" role=\"img\" focusable=\"false\" xmlns=\"http://www.w3.org/2000/svg\" aria-labelledby=\"MathJax-SVG-1-Title\">\n<title id=\"MathJax-SVG-1-Title\">position 开始提取</title>\n<defs aria-hidden=\"true\">\n<path stroke-width=\"1\" id=\"E1-MJMATHI-70\" d=\"M23 287Q24 290 25 295T30 317T40 348T55 381T75 411T101 433T134 442Q209 442 230 378L240 387Q302 442 358 442Q423 442 460 395T497 281Q497 173 421 82T249 -10Q227 -10 210 -4Q199 1 187 11T168 28L161 36Q160 35 139 -51T118 -138Q118 -144 126 -145T163 -148H188Q194 -155 194 -157T191 -175Q188 -187 185 -190T172 -194Q170 -194 161 -194T127 -193T65 -192Q-5 -192 -24 -194H-32Q-39 -187 -39 -183Q-37 -156 -26 -148H-6Q28 -147 33 -136Q36 -130 94 103T155 350Q156 355 156 364Q156 405 131 405Q109 405 94 377T71 316T59 280Q57 278 43 278H29Q23 284 23 287ZM178 102Q200 26 252 26Q282 26 310 49T356 107Q374 141 392 215T411 325V331Q411 405 350 405Q339 405 328 402T306 393T286 380T269 365T254 350T243 336T235 326L232 322Q232 321 229 308T218 264T204 212Q178 106 178 102Z\"/>\n<path stroke-width=\"1\" id=\"E1-MJMATHI-6F\" d=\"M201 -11Q126 -11 80 38T34 156Q34 221 64 279T146 380Q222 441 301 441Q333 441 341 440Q354 437 367 433T402 417T438 387T464 338T476 268Q476 161 390 75T201 -11ZM121 120Q121 70 147 48T206 26Q250 26 289 58T351 142Q360 163 374 216T388 308Q388 352 370 375Q346 405 306 405Q243 405 195 347Q158 303 140 230T121 120Z\"/>\n<path stroke-width=\"1\" id=\"E1-MJMATHI-73\" d=\"M131 289Q131 321 147 354T203 415T300 442Q362 442 390 415T419 355Q419 323 402 308T364 292Q351 292 340 300T328 326Q328 342 337 354T354 372T367 378Q368 378 368 379Q368 382 361 388T336 399T297 405Q249 405 227 379T204 326Q204 301 223 291T278 274T330 259Q396 230 396 163Q396 135 385 107T352 51T289 7T195 -10Q118 -10 86 19T53 87Q53 126 74 143T118 160Q133 160 146 151T160 120Q160 94 142 76T111 58Q109 57 108 57T107 55Q108 52 115 47T146 34T201 27Q237 27 263 38T301 66T318 97T323 122Q323 150 302 164T254 181T195 196T148 231Q131 256 131 289Z\"/>\n<path stroke-width=\"1\" id=\"E1-MJMATHI-69\" d=\"M184 600Q184 624 203 642T247 661Q265 661 277 649T290 619Q290 596 270 577T226 557Q211 557 198 567T184 600ZM21 287Q21 295 30 318T54 369T98 420T158 442Q197 442 223 419T250 357Q250 340 236 301T196 196T154 83Q149 61 149 51Q149 26 166 26Q175 26 185 29T208 43T235 78T260 137Q263 149 265 151T282 153Q302 153 302 143Q302 135 293 112T268 61T223 11T161 -11Q129 -11 102 10T74 74Q74 91 79 106T122 220Q160 321 166 341T173 380Q173 404 156 404H154Q124 404 99 371T61 287Q60 286 59 284T58 281T56 279T53 278T49 278T41 278H27Q21 284 21 287Z\"/>\n<path stroke-width=\"1\" id=\"E1-MJMATHI-74\" d=\"M26 385Q19 392 19 395Q19 399 22 411T27 425Q29 430 36 430T87 431H140L159 511Q162 522 166 540T173 566T179 586T187 603T197 615T211 624T229 626Q247 625 254 615T261 596Q261 589 252 549T232 470L222 433Q222 431 272 431H323Q330 424 330 420Q330 398 317 385H210L174 240Q135 80 135 68Q135 26 162 26Q197 26 230 60T283 144Q285 150 288 151T303 153H307Q322 153 322 145Q322 142 319 133Q314 117 301 95T267 48T216 6T155 -11Q125 -11 98 4T59 56Q57 64 57 83V101L92 241Q127 382 128 383Q128 385 77 385H26Z\"/>\n<path stroke-width=\"1\" id=\"E1-MJMATHI-6E\" d=\"M21 287Q22 293 24 303T36 341T56 388T89 425T135 442Q171 442 195 424T225 390T231 369Q231 367 232 367L243 378Q304 442 382 442Q436 442 469 415T503 336T465 179T427 52Q427 26 444 26Q450 26 453 27Q482 32 505 65T540 145Q542 153 560 153Q580 153 580 145Q580 144 576 130Q568 101 554 73T508 17T439 -10Q392 -10 371 17T350 73Q350 92 386 193T423 345Q423 404 379 404H374Q288 404 229 303L222 291L189 157Q156 26 151 16Q138 -11 108 -11Q95 -11 87 -5T76 7T74 17Q74 30 112 180T152 343Q153 348 153 366Q153 405 129 405Q91 405 66 305Q60 285 60 284Q58 278 41 278H27Q21 284 21 287Z\"/>\n</defs>\n<g stroke=\"currentColor\" fill=\"currentColor\" stroke-width=\"0\" transform=\"matrix(1 0 0 -1 0 0)\" aria-hidden=\"true\">\n <use xlink:href=\"#E1-MJMATHI-70\" x=\"0\" y=\"0\"/>\n <use xlink:href=\"#E1-MJMATHI-6F\" x=\"503\" y=\"0\"/>\n <use xlink:href=\"#E1-MJMATHI-73\" x=\"989\" y=\"0\"/>\n <use xlink:href=\"#E1-MJMATHI-69\" x=\"1458\" y=\"0\"/>\n <use xlink:href=\"#E1-MJMATHI-74\" x=\"1804\" y=\"0\"/>\n <use xlink:href=\"#E1-MJMATHI-69\" x=\"2165\" y=\"0\"/>\n <use xlink:href=\"#E1-MJMATHI-6F\" x=\"2511\" y=\"0\"/>\n <use xlink:href=\"#E1-MJMATHI-6E\" x=\"2996\" y=\"0\"/>\n<g transform=\"translate(3597,0)\">\n<text font-family=\"monospace\" stroke=\"none\" transform=\"scale(71.759) matrix(1 0 0 -1 0 0)\">开</text>\n</g>\n<g transform=\"translate(4529,0)\">\n<text font-family=\"monospace\" stroke=\"none\" transform=\"scale(71.759) matrix(1 0 0 -1 0 0)\">始</text>\n</g>\n<g transform=\"translate(5462,0)\">\n<text font-family=\"monospace\" stroke=\"none\" transform=\"scale(71.759) matrix(1 0 0 -1 0 0)\">提</text>\n</g>\n<g transform=\"translate(6395,0)\">\n<text font-family=\"monospace\" stroke=\"none\" transform=\"scale(71.759) matrix(1 0 0 -1 0 0)\">取</text>\n</g>\n</g>\n</svg>length 长度的 子串.\n$&#123;string:position:length&#125;\n# $position可以取负数，将从字符结尾开始,反向提取子串 需要加上圆括号转义\n$&#123;stringZ:(-4)&#125;<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n<p><strong>子串删除</strong></p>\n<pre class=\"line-numbers language-bash\" data-language=\"bash\"><code class=\"language-bash\">stringZ&#x3D;abcABC123ABCabc\n[1]\n# 从<svg xmlns:xlink=\"http://www.w3.org/1999/xlink\" width=\"30.125ex\" height=\"3.343ex\" style=\"vertical-align: -1.171ex;\" viewbox=\"0 -934.9 12970.5 1439.2\" role=\"img\" focusable=\"false\" xmlns=\"http://www.w3.org/2000/svg\" aria-labelledby=\"MathJax-SVG-1-Title\">\n<title id=\"MathJax-SVG-1-Title\">string 的左边截掉 第一个匹配的 </title>\n<defs aria-hidden=\"true\">\n<path stroke-width=\"1\" id=\"E1-MJMATHI-73\" d=\"M131 289Q131 321 147 354T203 415T300 442Q362 442 390 415T419 355Q419 323 402 308T364 292Q351 292 340 300T328 326Q328 342 337 354T354 372T367 378Q368 378 368 379Q368 382 361 388T336 399T297 405Q249 405 227 379T204 326Q204 301 223 291T278 274T330 259Q396 230 396 163Q396 135 385 107T352 51T289 7T195 -10Q118 -10 86 19T53 87Q53 126 74 143T118 160Q133 160 146 151T160 120Q160 94 142 76T111 58Q109 57 108 57T107 55Q108 52 115 47T146 34T201 27Q237 27 263 38T301 66T318 97T323 122Q323 150 302 164T254 181T195 196T148 231Q131 256 131 289Z\"/>\n<path stroke-width=\"1\" id=\"E1-MJMATHI-74\" d=\"M26 385Q19 392 19 395Q19 399 22 411T27 425Q29 430 36 430T87 431H140L159 511Q162 522 166 540T173 566T179 586T187 603T197 615T211 624T229 626Q247 625 254 615T261 596Q261 589 252 549T232 470L222 433Q222 431 272 431H323Q330 424 330 420Q330 398 317 385H210L174 240Q135 80 135 68Q135 26 162 26Q197 26 230 60T283 144Q285 150 288 151T303 153H307Q322 153 322 145Q322 142 319 133Q314 117 301 95T267 48T216 6T155 -11Q125 -11 98 4T59 56Q57 64 57 83V101L92 241Q127 382 128 383Q128 385 77 385H26Z\"/>\n<path stroke-width=\"1\" id=\"E1-MJMATHI-72\" d=\"M21 287Q22 290 23 295T28 317T38 348T53 381T73 411T99 433T132 442Q161 442 183 430T214 408T225 388Q227 382 228 382T236 389Q284 441 347 441H350Q398 441 422 400Q430 381 430 363Q430 333 417 315T391 292T366 288Q346 288 334 299T322 328Q322 376 378 392Q356 405 342 405Q286 405 239 331Q229 315 224 298T190 165Q156 25 151 16Q138 -11 108 -11Q95 -11 87 -5T76 7T74 17Q74 30 114 189T154 366Q154 405 128 405Q107 405 92 377T68 316T57 280Q55 278 41 278H27Q21 284 21 287Z\"/>\n<path stroke-width=\"1\" id=\"E1-MJMATHI-69\" d=\"M184 600Q184 624 203 642T247 661Q265 661 277 649T290 619Q290 596 270 577T226 557Q211 557 198 567T184 600ZM21 287Q21 295 30 318T54 369T98 420T158 442Q197 442 223 419T250 357Q250 340 236 301T196 196T154 83Q149 61 149 51Q149 26 166 26Q175 26 185 29T208 43T235 78T260 137Q263 149 265 151T282 153Q302 153 302 143Q302 135 293 112T268 61T223 11T161 -11Q129 -11 102 10T74 74Q74 91 79 106T122 220Q160 321 166 341T173 380Q173 404 156 404H154Q124 404 99 371T61 287Q60 286 59 284T58 281T56 279T53 278T49 278T41 278H27Q21 284 21 287Z\"/>\n<path stroke-width=\"1\" id=\"E1-MJMATHI-6E\" d=\"M21 287Q22 293 24 303T36 341T56 388T89 425T135 442Q171 442 195 424T225 390T231 369Q231 367 232 367L243 378Q304 442 382 442Q436 442 469 415T503 336T465 179T427 52Q427 26 444 26Q450 26 453 27Q482 32 505 65T540 145Q542 153 560 153Q580 153 580 145Q580 144 576 130Q568 101 554 73T508 17T439 -10Q392 -10 371 17T350 73Q350 92 386 193T423 345Q423 404 379 404H374Q288 404 229 303L222 291L189 157Q156 26 151 16Q138 -11 108 -11Q95 -11 87 -5T76 7T74 17Q74 30 112 180T152 343Q153 348 153 366Q153 405 129 405Q91 405 66 305Q60 285 60 284Q58 278 41 278H27Q21 284 21 287Z\"/>\n<path stroke-width=\"1\" id=\"E1-MJMATHI-67\" d=\"M311 43Q296 30 267 15T206 0Q143 0 105 45T66 160Q66 265 143 353T314 442Q361 442 401 394L404 398Q406 401 409 404T418 412T431 419T447 422Q461 422 470 413T480 394Q480 379 423 152T363 -80Q345 -134 286 -169T151 -205Q10 -205 10 -137Q10 -111 28 -91T74 -71Q89 -71 102 -80T116 -111Q116 -121 114 -130T107 -144T99 -154T92 -162L90 -164H91Q101 -167 151 -167Q189 -167 211 -155Q234 -144 254 -122T282 -75Q288 -56 298 -13Q311 35 311 43ZM384 328L380 339Q377 350 375 354T369 368T359 382T346 393T328 402T306 405Q262 405 221 352Q191 313 171 233T151 117Q151 38 213 38Q269 38 323 108L331 118L384 328Z\"/>\n</defs>\n<g stroke=\"currentColor\" fill=\"currentColor\" stroke-width=\"0\" transform=\"matrix(1 0 0 -1 0 0)\" aria-hidden=\"true\">\n <use xlink:href=\"#E1-MJMATHI-73\" x=\"0\" y=\"0\"/>\n <use xlink:href=\"#E1-MJMATHI-74\" x=\"469\" y=\"0\"/>\n <use xlink:href=\"#E1-MJMATHI-72\" x=\"831\" y=\"0\"/>\n <use xlink:href=\"#E1-MJMATHI-69\" x=\"1282\" y=\"0\"/>\n <use xlink:href=\"#E1-MJMATHI-6E\" x=\"1628\" y=\"0\"/>\n <use xlink:href=\"#E1-MJMATHI-67\" x=\"2228\" y=\"0\"/>\n<g transform=\"translate(2709,0)\">\n<text font-family=\"monospace\" stroke=\"none\" transform=\"scale(71.759) matrix(1 0 0 -1 0 0)\">的</text>\n</g>\n<g transform=\"translate(3641,0)\">\n<text font-family=\"monospace\" stroke=\"none\" transform=\"scale(71.759) matrix(1 0 0 -1 0 0)\">左</text>\n</g>\n<g transform=\"translate(4574,0)\">\n<text font-family=\"monospace\" stroke=\"none\" transform=\"scale(71.759) matrix(1 0 0 -1 0 0)\">边</text>\n</g>\n<g transform=\"translate(5507,0)\">\n<text font-family=\"monospace\" stroke=\"none\" transform=\"scale(71.759) matrix(1 0 0 -1 0 0)\">截</text>\n</g>\n<g transform=\"translate(6440,0)\">\n<text font-family=\"monospace\" stroke=\"none\" transform=\"scale(71.759) matrix(1 0 0 -1 0 0)\">掉</text>\n</g>\n<g transform=\"translate(7373,0)\">\n<text font-family=\"monospace\" stroke=\"none\" transform=\"scale(71.759) matrix(1 0 0 -1 0 0)\">第</text>\n</g>\n<g transform=\"translate(8306,0)\">\n<text font-family=\"monospace\" stroke=\"none\" transform=\"scale(71.759) matrix(1 0 0 -1 0 0)\">一</text>\n</g>\n<g transform=\"translate(9239,0)\">\n<text font-family=\"monospace\" stroke=\"none\" transform=\"scale(71.759) matrix(1 0 0 -1 0 0)\">个</text>\n</g>\n<g transform=\"translate(10171,0)\">\n<text font-family=\"monospace\" stroke=\"none\" transform=\"scale(71.759) matrix(1 0 0 -1 0 0)\">匹</text>\n</g>\n<g transform=\"translate(11104,0)\">\n<text font-family=\"monospace\" stroke=\"none\" transform=\"scale(71.759) matrix(1 0 0 -1 0 0)\">配</text>\n</g>\n<g transform=\"translate(12037,0)\">\n<text font-family=\"monospace\" stroke=\"none\" transform=\"scale(71.759) matrix(1 0 0 -1 0 0)\">的</text>\n</g>\n</g>\n</svg>substring\n$&#123;string#substring&#125; \necho $&#123;stringZ#a*C&#125; \n&gt;&gt; 123ABCabc\n\n[2]\n# 从<svg xmlns:xlink=\"http://www.w3.org/1999/xlink\" width=\"32.292ex\" height=\"3.343ex\" style=\"vertical-align: -1.171ex;\" viewbox=\"0 -934.9 13903.4 1439.2\" role=\"img\" focusable=\"false\" xmlns=\"http://www.w3.org/2000/svg\" aria-labelledby=\"MathJax-SVG-1-Title\">\n<title id=\"MathJax-SVG-1-Title\">string 的左边截掉最后一个匹配的</title>\n<defs aria-hidden=\"true\">\n<path stroke-width=\"1\" id=\"E1-MJMATHI-73\" d=\"M131 289Q131 321 147 354T203 415T300 442Q362 442 390 415T419 355Q419 323 402 308T364 292Q351 292 340 300T328 326Q328 342 337 354T354 372T367 378Q368 378 368 379Q368 382 361 388T336 399T297 405Q249 405 227 379T204 326Q204 301 223 291T278 274T330 259Q396 230 396 163Q396 135 385 107T352 51T289 7T195 -10Q118 -10 86 19T53 87Q53 126 74 143T118 160Q133 160 146 151T160 120Q160 94 142 76T111 58Q109 57 108 57T107 55Q108 52 115 47T146 34T201 27Q237 27 263 38T301 66T318 97T323 122Q323 150 302 164T254 181T195 196T148 231Q131 256 131 289Z\"/>\n<path stroke-width=\"1\" id=\"E1-MJMATHI-74\" d=\"M26 385Q19 392 19 395Q19 399 22 411T27 425Q29 430 36 430T87 431H140L159 511Q162 522 166 540T173 566T179 586T187 603T197 615T211 624T229 626Q247 625 254 615T261 596Q261 589 252 549T232 470L222 433Q222 431 272 431H323Q330 424 330 420Q330 398 317 385H210L174 240Q135 80 135 68Q135 26 162 26Q197 26 230 60T283 144Q285 150 288 151T303 153H307Q322 153 322 145Q322 142 319 133Q314 117 301 95T267 48T216 6T155 -11Q125 -11 98 4T59 56Q57 64 57 83V101L92 241Q127 382 128 383Q128 385 77 385H26Z\"/>\n<path stroke-width=\"1\" id=\"E1-MJMATHI-72\" d=\"M21 287Q22 290 23 295T28 317T38 348T53 381T73 411T99 433T132 442Q161 442 183 430T214 408T225 388Q227 382 228 382T236 389Q284 441 347 441H350Q398 441 422 400Q430 381 430 363Q430 333 417 315T391 292T366 288Q346 288 334 299T322 328Q322 376 378 392Q356 405 342 405Q286 405 239 331Q229 315 224 298T190 165Q156 25 151 16Q138 -11 108 -11Q95 -11 87 -5T76 7T74 17Q74 30 114 189T154 366Q154 405 128 405Q107 405 92 377T68 316T57 280Q55 278 41 278H27Q21 284 21 287Z\"/>\n<path stroke-width=\"1\" id=\"E1-MJMATHI-69\" d=\"M184 600Q184 624 203 642T247 661Q265 661 277 649T290 619Q290 596 270 577T226 557Q211 557 198 567T184 600ZM21 287Q21 295 30 318T54 369T98 420T158 442Q197 442 223 419T250 357Q250 340 236 301T196 196T154 83Q149 61 149 51Q149 26 166 26Q175 26 185 29T208 43T235 78T260 137Q263 149 265 151T282 153Q302 153 302 143Q302 135 293 112T268 61T223 11T161 -11Q129 -11 102 10T74 74Q74 91 79 106T122 220Q160 321 166 341T173 380Q173 404 156 404H154Q124 404 99 371T61 287Q60 286 59 284T58 281T56 279T53 278T49 278T41 278H27Q21 284 21 287Z\"/>\n<path stroke-width=\"1\" id=\"E1-MJMATHI-6E\" d=\"M21 287Q22 293 24 303T36 341T56 388T89 425T135 442Q171 442 195 424T225 390T231 369Q231 367 232 367L243 378Q304 442 382 442Q436 442 469 415T503 336T465 179T427 52Q427 26 444 26Q450 26 453 27Q482 32 505 65T540 145Q542 153 560 153Q580 153 580 145Q580 144 576 130Q568 101 554 73T508 17T439 -10Q392 -10 371 17T350 73Q350 92 386 193T423 345Q423 404 379 404H374Q288 404 229 303L222 291L189 157Q156 26 151 16Q138 -11 108 -11Q95 -11 87 -5T76 7T74 17Q74 30 112 180T152 343Q153 348 153 366Q153 405 129 405Q91 405 66 305Q60 285 60 284Q58 278 41 278H27Q21 284 21 287Z\"/>\n<path stroke-width=\"1\" id=\"E1-MJMATHI-67\" d=\"M311 43Q296 30 267 15T206 0Q143 0 105 45T66 160Q66 265 143 353T314 442Q361 442 401 394L404 398Q406 401 409 404T418 412T431 419T447 422Q461 422 470 413T480 394Q480 379 423 152T363 -80Q345 -134 286 -169T151 -205Q10 -205 10 -137Q10 -111 28 -91T74 -71Q89 -71 102 -80T116 -111Q116 -121 114 -130T107 -144T99 -154T92 -162L90 -164H91Q101 -167 151 -167Q189 -167 211 -155Q234 -144 254 -122T282 -75Q288 -56 298 -13Q311 35 311 43ZM384 328L380 339Q377 350 375 354T369 368T359 382T346 393T328 402T306 405Q262 405 221 352Q191 313 171 233T151 117Q151 38 213 38Q269 38 323 108L331 118L384 328Z\"/>\n</defs>\n<g stroke=\"currentColor\" fill=\"currentColor\" stroke-width=\"0\" transform=\"matrix(1 0 0 -1 0 0)\" aria-hidden=\"true\">\n <use xlink:href=\"#E1-MJMATHI-73\" x=\"0\" y=\"0\"/>\n <use xlink:href=\"#E1-MJMATHI-74\" x=\"469\" y=\"0\"/>\n <use xlink:href=\"#E1-MJMATHI-72\" x=\"831\" y=\"0\"/>\n <use xlink:href=\"#E1-MJMATHI-69\" x=\"1282\" y=\"0\"/>\n <use xlink:href=\"#E1-MJMATHI-6E\" x=\"1628\" y=\"0\"/>\n <use xlink:href=\"#E1-MJMATHI-67\" x=\"2228\" y=\"0\"/>\n<g transform=\"translate(2709,0)\">\n<text font-family=\"monospace\" stroke=\"none\" transform=\"scale(71.759) matrix(1 0 0 -1 0 0)\">的</text>\n</g>\n<g transform=\"translate(3641,0)\">\n<text font-family=\"monospace\" stroke=\"none\" transform=\"scale(71.759) matrix(1 0 0 -1 0 0)\">左</text>\n</g>\n<g transform=\"translate(4574,0)\">\n<text font-family=\"monospace\" stroke=\"none\" transform=\"scale(71.759) matrix(1 0 0 -1 0 0)\">边</text>\n</g>\n<g transform=\"translate(5507,0)\">\n<text font-family=\"monospace\" stroke=\"none\" transform=\"scale(71.759) matrix(1 0 0 -1 0 0)\">截</text>\n</g>\n<g transform=\"translate(6440,0)\">\n<text font-family=\"monospace\" stroke=\"none\" transform=\"scale(71.759) matrix(1 0 0 -1 0 0)\">掉</text>\n</g>\n<g transform=\"translate(7373,0)\">\n<text font-family=\"monospace\" stroke=\"none\" transform=\"scale(71.759) matrix(1 0 0 -1 0 0)\">最</text>\n</g>\n<g transform=\"translate(8306,0)\">\n<text font-family=\"monospace\" stroke=\"none\" transform=\"scale(71.759) matrix(1 0 0 -1 0 0)\">后</text>\n</g>\n<g transform=\"translate(9239,0)\">\n<text font-family=\"monospace\" stroke=\"none\" transform=\"scale(71.759) matrix(1 0 0 -1 0 0)\">一</text>\n</g>\n<g transform=\"translate(10171,0)\">\n<text font-family=\"monospace\" stroke=\"none\" transform=\"scale(71.759) matrix(1 0 0 -1 0 0)\">个</text>\n</g>\n<g transform=\"translate(11104,0)\">\n<text font-family=\"monospace\" stroke=\"none\" transform=\"scale(71.759) matrix(1 0 0 -1 0 0)\">匹</text>\n</g>\n<g transform=\"translate(12037,0)\">\n<text font-family=\"monospace\" stroke=\"none\" transform=\"scale(71.759) matrix(1 0 0 -1 0 0)\">配</text>\n</g>\n<g transform=\"translate(12970,0)\">\n<text font-family=\"monospace\" stroke=\"none\" transform=\"scale(71.759) matrix(1 0 0 -1 0 0)\">的</text>\n</g>\n</g>\n</svg>substring\n$&#123;string##substring&#125; \necho $&#123;stringZ##a*C&#125; \n&gt;&gt; abc\n\n\nstringZ&#x3D;abcABC123ABCabc\n[3]\n# 从$stringZ 的后边开始截掉&#39;b&#39;和&#39;c&#39;之间的最近的匹配\necho $&#123;stringZ%b*c&#125;\n&gt;&gt; abcABC123ABCa\n[4]\n# 从$stringZ 的后边开始截掉&#39;b&#39;和&#39;c&#39;之间的最远的匹配\necho $&#123;stringZ%%b*c&#125;\n&gt;&gt; a<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n<p><strong>子串替换</strong></p>\n<pre class=\"line-numbers language-bash\" data-language=\"bash\"><code class=\"language-bash\"># &#x2F; 替换第一个匹配的$substring.\n$&#123;string&#x2F;substring&#x2F;replacement&#125;\n# &#x2F;&#x2F; 替换所有匹配的$substring\n$&#123;string&#x2F;&#x2F;substring&#x2F;replacement&#125;\n\n# 如果<svg xmlns:xlink=\"http://www.w3.org/1999/xlink\" width=\"14.043ex\" height=\"3.343ex\" style=\"vertical-align: -1.171ex;\" viewbox=\"0 -934.9 6046.2 1439.2\" role=\"img\" focusable=\"false\" xmlns=\"http://www.w3.org/2000/svg\" aria-labelledby=\"MathJax-SVG-1-Title\">\n<title id=\"MathJax-SVG-1-Title\">substring 匹配</title>\n<defs aria-hidden=\"true\">\n<path stroke-width=\"1\" id=\"E1-MJMATHI-73\" d=\"M131 289Q131 321 147 354T203 415T300 442Q362 442 390 415T419 355Q419 323 402 308T364 292Q351 292 340 300T328 326Q328 342 337 354T354 372T367 378Q368 378 368 379Q368 382 361 388T336 399T297 405Q249 405 227 379T204 326Q204 301 223 291T278 274T330 259Q396 230 396 163Q396 135 385 107T352 51T289 7T195 -10Q118 -10 86 19T53 87Q53 126 74 143T118 160Q133 160 146 151T160 120Q160 94 142 76T111 58Q109 57 108 57T107 55Q108 52 115 47T146 34T201 27Q237 27 263 38T301 66T318 97T323 122Q323 150 302 164T254 181T195 196T148 231Q131 256 131 289Z\"/>\n<path stroke-width=\"1\" id=\"E1-MJMATHI-75\" d=\"M21 287Q21 295 30 318T55 370T99 420T158 442Q204 442 227 417T250 358Q250 340 216 246T182 105Q182 62 196 45T238 27T291 44T328 78L339 95Q341 99 377 247Q407 367 413 387T427 416Q444 431 463 431Q480 431 488 421T496 402L420 84Q419 79 419 68Q419 43 426 35T447 26Q469 29 482 57T512 145Q514 153 532 153Q551 153 551 144Q550 139 549 130T540 98T523 55T498 17T462 -8Q454 -10 438 -10Q372 -10 347 46Q345 45 336 36T318 21T296 6T267 -6T233 -11Q189 -11 155 7Q103 38 103 113Q103 170 138 262T173 379Q173 380 173 381Q173 390 173 393T169 400T158 404H154Q131 404 112 385T82 344T65 302T57 280Q55 278 41 278H27Q21 284 21 287Z\"/>\n<path stroke-width=\"1\" id=\"E1-MJMATHI-62\" d=\"M73 647Q73 657 77 670T89 683Q90 683 161 688T234 694Q246 694 246 685T212 542Q204 508 195 472T180 418L176 399Q176 396 182 402Q231 442 283 442Q345 442 383 396T422 280Q422 169 343 79T173 -11Q123 -11 82 27T40 150V159Q40 180 48 217T97 414Q147 611 147 623T109 637Q104 637 101 637H96Q86 637 83 637T76 640T73 647ZM336 325V331Q336 405 275 405Q258 405 240 397T207 376T181 352T163 330L157 322L136 236Q114 150 114 114Q114 66 138 42Q154 26 178 26Q211 26 245 58Q270 81 285 114T318 219Q336 291 336 325Z\"/>\n<path stroke-width=\"1\" id=\"E1-MJMATHI-74\" d=\"M26 385Q19 392 19 395Q19 399 22 411T27 425Q29 430 36 430T87 431H140L159 511Q162 522 166 540T173 566T179 586T187 603T197 615T211 624T229 626Q247 625 254 615T261 596Q261 589 252 549T232 470L222 433Q222 431 272 431H323Q330 424 330 420Q330 398 317 385H210L174 240Q135 80 135 68Q135 26 162 26Q197 26 230 60T283 144Q285 150 288 151T303 153H307Q322 153 322 145Q322 142 319 133Q314 117 301 95T267 48T216 6T155 -11Q125 -11 98 4T59 56Q57 64 57 83V101L92 241Q127 382 128 383Q128 385 77 385H26Z\"/>\n<path stroke-width=\"1\" id=\"E1-MJMATHI-72\" d=\"M21 287Q22 290 23 295T28 317T38 348T53 381T73 411T99 433T132 442Q161 442 183 430T214 408T225 388Q227 382 228 382T236 389Q284 441 347 441H350Q398 441 422 400Q430 381 430 363Q430 333 417 315T391 292T366 288Q346 288 334 299T322 328Q322 376 378 392Q356 405 342 405Q286 405 239 331Q229 315 224 298T190 165Q156 25 151 16Q138 -11 108 -11Q95 -11 87 -5T76 7T74 17Q74 30 114 189T154 366Q154 405 128 405Q107 405 92 377T68 316T57 280Q55 278 41 278H27Q21 284 21 287Z\"/>\n<path stroke-width=\"1\" id=\"E1-MJMATHI-69\" d=\"M184 600Q184 624 203 642T247 661Q265 661 277 649T290 619Q290 596 270 577T226 557Q211 557 198 567T184 600ZM21 287Q21 295 30 318T54 369T98 420T158 442Q197 442 223 419T250 357Q250 340 236 301T196 196T154 83Q149 61 149 51Q149 26 166 26Q175 26 185 29T208 43T235 78T260 137Q263 149 265 151T282 153Q302 153 302 143Q302 135 293 112T268 61T223 11T161 -11Q129 -11 102 10T74 74Q74 91 79 106T122 220Q160 321 166 341T173 380Q173 404 156 404H154Q124 404 99 371T61 287Q60 286 59 284T58 281T56 279T53 278T49 278T41 278H27Q21 284 21 287Z\"/>\n<path stroke-width=\"1\" id=\"E1-MJMATHI-6E\" d=\"M21 287Q22 293 24 303T36 341T56 388T89 425T135 442Q171 442 195 424T225 390T231 369Q231 367 232 367L243 378Q304 442 382 442Q436 442 469 415T503 336T465 179T427 52Q427 26 444 26Q450 26 453 27Q482 32 505 65T540 145Q542 153 560 153Q580 153 580 145Q580 144 576 130Q568 101 554 73T508 17T439 -10Q392 -10 371 17T350 73Q350 92 386 193T423 345Q423 404 379 404H374Q288 404 229 303L222 291L189 157Q156 26 151 16Q138 -11 108 -11Q95 -11 87 -5T76 7T74 17Q74 30 112 180T152 343Q153 348 153 366Q153 405 129 405Q91 405 66 305Q60 285 60 284Q58 278 41 278H27Q21 284 21 287Z\"/>\n<path stroke-width=\"1\" id=\"E1-MJMATHI-67\" d=\"M311 43Q296 30 267 15T206 0Q143 0 105 45T66 160Q66 265 143 353T314 442Q361 442 401 394L404 398Q406 401 409 404T418 412T431 419T447 422Q461 422 470 413T480 394Q480 379 423 152T363 -80Q345 -134 286 -169T151 -205Q10 -205 10 -137Q10 -111 28 -91T74 -71Q89 -71 102 -80T116 -111Q116 -121 114 -130T107 -144T99 -154T92 -162L90 -164H91Q101 -167 151 -167Q189 -167 211 -155Q234 -144 254 -122T282 -75Q288 -56 298 -13Q311 35 311 43ZM384 328L380 339Q377 350 375 354T369 368T359 382T346 393T328 402T306 405Q262 405 221 352Q191 313 171 233T151 117Q151 38 213 38Q269 38 323 108L331 118L384 328Z\"/>\n</defs>\n<g stroke=\"currentColor\" fill=\"currentColor\" stroke-width=\"0\" transform=\"matrix(1 0 0 -1 0 0)\" aria-hidden=\"true\">\n <use xlink:href=\"#E1-MJMATHI-73\" x=\"0\" y=\"0\"/>\n <use xlink:href=\"#E1-MJMATHI-75\" x=\"469\" y=\"0\"/>\n <use xlink:href=\"#E1-MJMATHI-62\" x=\"1042\" y=\"0\"/>\n <use xlink:href=\"#E1-MJMATHI-73\" x=\"1471\" y=\"0\"/>\n <use xlink:href=\"#E1-MJMATHI-74\" x=\"1941\" y=\"0\"/>\n <use xlink:href=\"#E1-MJMATHI-72\" x=\"2302\" y=\"0\"/>\n <use xlink:href=\"#E1-MJMATHI-69\" x=\"2754\" y=\"0\"/>\n <use xlink:href=\"#E1-MJMATHI-6E\" x=\"3099\" y=\"0\"/>\n <use xlink:href=\"#E1-MJMATHI-67\" x=\"3700\" y=\"0\"/>\n<g transform=\"translate(4180,0)\">\n<text font-family=\"monospace\" stroke=\"none\" transform=\"scale(71.759) matrix(1 0 0 -1 0 0)\">匹</text>\n</g>\n<g transform=\"translate(5113,0)\">\n<text font-family=\"monospace\" stroke=\"none\" transform=\"scale(71.759) matrix(1 0 0 -1 0 0)\">配</text>\n</g>\n</g>\n</svg>string 的开头部分,那么就用 <svg xmlns:xlink=\"http://www.w3.org/1999/xlink\" width=\"19.173ex\" height=\"3.343ex\" style=\"vertical-align: -1.171ex;\" viewbox=\"0 -934.9 8255.1 1439.2\" role=\"img\" focusable=\"false\" xmlns=\"http://www.w3.org/2000/svg\" aria-labelledby=\"MathJax-SVG-1-Title\">\n<title id=\"MathJax-SVG-1-Title\">replacement 来替换</title>\n<defs aria-hidden=\"true\">\n<path stroke-width=\"1\" id=\"E1-MJMATHI-72\" d=\"M21 287Q22 290 23 295T28 317T38 348T53 381T73 411T99 433T132 442Q161 442 183 430T214 408T225 388Q227 382 228 382T236 389Q284 441 347 441H350Q398 441 422 400Q430 381 430 363Q430 333 417 315T391 292T366 288Q346 288 334 299T322 328Q322 376 378 392Q356 405 342 405Q286 405 239 331Q229 315 224 298T190 165Q156 25 151 16Q138 -11 108 -11Q95 -11 87 -5T76 7T74 17Q74 30 114 189T154 366Q154 405 128 405Q107 405 92 377T68 316T57 280Q55 278 41 278H27Q21 284 21 287Z\"/>\n<path stroke-width=\"1\" id=\"E1-MJMATHI-65\" d=\"M39 168Q39 225 58 272T107 350T174 402T244 433T307 442H310Q355 442 388 420T421 355Q421 265 310 237Q261 224 176 223Q139 223 138 221Q138 219 132 186T125 128Q125 81 146 54T209 26T302 45T394 111Q403 121 406 121Q410 121 419 112T429 98T420 82T390 55T344 24T281 -1T205 -11Q126 -11 83 42T39 168ZM373 353Q367 405 305 405Q272 405 244 391T199 357T170 316T154 280T149 261Q149 260 169 260Q282 260 327 284T373 353Z\"/>\n<path stroke-width=\"1\" id=\"E1-MJMATHI-70\" d=\"M23 287Q24 290 25 295T30 317T40 348T55 381T75 411T101 433T134 442Q209 442 230 378L240 387Q302 442 358 442Q423 442 460 395T497 281Q497 173 421 82T249 -10Q227 -10 210 -4Q199 1 187 11T168 28L161 36Q160 35 139 -51T118 -138Q118 -144 126 -145T163 -148H188Q194 -155 194 -157T191 -175Q188 -187 185 -190T172 -194Q170 -194 161 -194T127 -193T65 -192Q-5 -192 -24 -194H-32Q-39 -187 -39 -183Q-37 -156 -26 -148H-6Q28 -147 33 -136Q36 -130 94 103T155 350Q156 355 156 364Q156 405 131 405Q109 405 94 377T71 316T59 280Q57 278 43 278H29Q23 284 23 287ZM178 102Q200 26 252 26Q282 26 310 49T356 107Q374 141 392 215T411 325V331Q411 405 350 405Q339 405 328 402T306 393T286 380T269 365T254 350T243 336T235 326L232 322Q232 321 229 308T218 264T204 212Q178 106 178 102Z\"/>\n<path stroke-width=\"1\" id=\"E1-MJMATHI-6C\" d=\"M117 59Q117 26 142 26Q179 26 205 131Q211 151 215 152Q217 153 225 153H229Q238 153 241 153T246 151T248 144Q247 138 245 128T234 90T214 43T183 6T137 -11Q101 -11 70 11T38 85Q38 97 39 102L104 360Q167 615 167 623Q167 626 166 628T162 632T157 634T149 635T141 636T132 637T122 637Q112 637 109 637T101 638T95 641T94 647Q94 649 96 661Q101 680 107 682T179 688Q194 689 213 690T243 693T254 694Q266 694 266 686Q266 675 193 386T118 83Q118 81 118 75T117 65V59Z\"/>\n<path stroke-width=\"1\" id=\"E1-MJMATHI-61\" d=\"M33 157Q33 258 109 349T280 441Q331 441 370 392Q386 422 416 422Q429 422 439 414T449 394Q449 381 412 234T374 68Q374 43 381 35T402 26Q411 27 422 35Q443 55 463 131Q469 151 473 152Q475 153 483 153H487Q506 153 506 144Q506 138 501 117T481 63T449 13Q436 0 417 -8Q409 -10 393 -10Q359 -10 336 5T306 36L300 51Q299 52 296 50Q294 48 292 46Q233 -10 172 -10Q117 -10 75 30T33 157ZM351 328Q351 334 346 350T323 385T277 405Q242 405 210 374T160 293Q131 214 119 129Q119 126 119 118T118 106Q118 61 136 44T179 26Q217 26 254 59T298 110Q300 114 325 217T351 328Z\"/>\n<path stroke-width=\"1\" id=\"E1-MJMATHI-63\" d=\"M34 159Q34 268 120 355T306 442Q362 442 394 418T427 355Q427 326 408 306T360 285Q341 285 330 295T319 325T330 359T352 380T366 386H367Q367 388 361 392T340 400T306 404Q276 404 249 390Q228 381 206 359Q162 315 142 235T121 119Q121 73 147 50Q169 26 205 26H209Q321 26 394 111Q403 121 406 121Q410 121 419 112T429 98T420 83T391 55T346 25T282 0T202 -11Q127 -11 81 37T34 159Z\"/>\n<path stroke-width=\"1\" id=\"E1-MJMATHI-6D\" d=\"M21 287Q22 293 24 303T36 341T56 388T88 425T132 442T175 435T205 417T221 395T229 376L231 369Q231 367 232 367L243 378Q303 442 384 442Q401 442 415 440T441 433T460 423T475 411T485 398T493 385T497 373T500 364T502 357L510 367Q573 442 659 442Q713 442 746 415T780 336Q780 285 742 178T704 50Q705 36 709 31T724 26Q752 26 776 56T815 138Q818 149 821 151T837 153Q857 153 857 145Q857 144 853 130Q845 101 831 73T785 17T716 -10Q669 -10 648 17T627 73Q627 92 663 193T700 345Q700 404 656 404H651Q565 404 506 303L499 291L466 157Q433 26 428 16Q415 -11 385 -11Q372 -11 364 -4T353 8T350 18Q350 29 384 161L420 307Q423 322 423 345Q423 404 379 404H374Q288 404 229 303L222 291L189 157Q156 26 151 16Q138 -11 108 -11Q95 -11 87 -5T76 7T74 17Q74 30 112 181Q151 335 151 342Q154 357 154 369Q154 405 129 405Q107 405 92 377T69 316T57 280Q55 278 41 278H27Q21 284 21 287Z\"/>\n<path stroke-width=\"1\" id=\"E1-MJMATHI-6E\" d=\"M21 287Q22 293 24 303T36 341T56 388T89 425T135 442Q171 442 195 424T225 390T231 369Q231 367 232 367L243 378Q304 442 382 442Q436 442 469 415T503 336T465 179T427 52Q427 26 444 26Q450 26 453 27Q482 32 505 65T540 145Q542 153 560 153Q580 153 580 145Q580 144 576 130Q568 101 554 73T508 17T439 -10Q392 -10 371 17T350 73Q350 92 386 193T423 345Q423 404 379 404H374Q288 404 229 303L222 291L189 157Q156 26 151 16Q138 -11 108 -11Q95 -11 87 -5T76 7T74 17Q74 30 112 180T152 343Q153 348 153 366Q153 405 129 405Q91 405 66 305Q60 285 60 284Q58 278 41 278H27Q21 284 21 287Z\"/>\n<path stroke-width=\"1\" id=\"E1-MJMATHI-74\" d=\"M26 385Q19 392 19 395Q19 399 22 411T27 425Q29 430 36 430T87 431H140L159 511Q162 522 166 540T173 566T179 586T187 603T197 615T211 624T229 626Q247 625 254 615T261 596Q261 589 252 549T232 470L222 433Q222 431 272 431H323Q330 424 330 420Q330 398 317 385H210L174 240Q135 80 135 68Q135 26 162 26Q197 26 230 60T283 144Q285 150 288 151T303 153H307Q322 153 322 145Q322 142 319 133Q314 117 301 95T267 48T216 6T155 -11Q125 -11 98 4T59 56Q57 64 57 83V101L92 241Q127 382 128 383Q128 385 77 385H26Z\"/>\n</defs>\n<g stroke=\"currentColor\" fill=\"currentColor\" stroke-width=\"0\" transform=\"matrix(1 0 0 -1 0 0)\" aria-hidden=\"true\">\n <use xlink:href=\"#E1-MJMATHI-72\" x=\"0\" y=\"0\"/>\n <use xlink:href=\"#E1-MJMATHI-65\" x=\"451\" y=\"0\"/>\n <use xlink:href=\"#E1-MJMATHI-70\" x=\"918\" y=\"0\"/>\n <use xlink:href=\"#E1-MJMATHI-6C\" x=\"1421\" y=\"0\"/>\n <use xlink:href=\"#E1-MJMATHI-61\" x=\"1720\" y=\"0\"/>\n <use xlink:href=\"#E1-MJMATHI-63\" x=\"2249\" y=\"0\"/>\n <use xlink:href=\"#E1-MJMATHI-65\" x=\"2683\" y=\"0\"/>\n <use xlink:href=\"#E1-MJMATHI-6D\" x=\"3149\" y=\"0\"/>\n <use xlink:href=\"#E1-MJMATHI-65\" x=\"4028\" y=\"0\"/>\n <use xlink:href=\"#E1-MJMATHI-6E\" x=\"4494\" y=\"0\"/>\n <use xlink:href=\"#E1-MJMATHI-74\" x=\"5095\" y=\"0\"/>\n<g transform=\"translate(5456,0)\">\n<text font-family=\"monospace\" stroke=\"none\" transform=\"scale(71.759) matrix(1 0 0 -1 0 0)\">来</text>\n</g>\n<g transform=\"translate(6389,0)\">\n<text font-family=\"monospace\" stroke=\"none\" transform=\"scale(71.759) matrix(1 0 0 -1 0 0)\">替</text>\n</g>\n<g transform=\"translate(7322,0)\">\n<text font-family=\"monospace\" stroke=\"none\" transform=\"scale(71.759) matrix(1 0 0 -1 0 0)\">换</text>\n</g>\n</g>\n</svg>substring.\n$&#123;string&#x2F;#substring&#x2F;replacement&#125; \n# 如果<svg xmlns:xlink=\"http://www.w3.org/1999/xlink\" width=\"14.043ex\" height=\"3.343ex\" style=\"vertical-align: -1.171ex;\" viewbox=\"0 -934.9 6046.2 1439.2\" role=\"img\" focusable=\"false\" xmlns=\"http://www.w3.org/2000/svg\" aria-labelledby=\"MathJax-SVG-1-Title\">\n<title id=\"MathJax-SVG-1-Title\">substring 匹配</title>\n<defs aria-hidden=\"true\">\n<path stroke-width=\"1\" id=\"E1-MJMATHI-73\" d=\"M131 289Q131 321 147 354T203 415T300 442Q362 442 390 415T419 355Q419 323 402 308T364 292Q351 292 340 300T328 326Q328 342 337 354T354 372T367 378Q368 378 368 379Q368 382 361 388T336 399T297 405Q249 405 227 379T204 326Q204 301 223 291T278 274T330 259Q396 230 396 163Q396 135 385 107T352 51T289 7T195 -10Q118 -10 86 19T53 87Q53 126 74 143T118 160Q133 160 146 151T160 120Q160 94 142 76T111 58Q109 57 108 57T107 55Q108 52 115 47T146 34T201 27Q237 27 263 38T301 66T318 97T323 122Q323 150 302 164T254 181T195 196T148 231Q131 256 131 289Z\"/>\n<path stroke-width=\"1\" id=\"E1-MJMATHI-75\" d=\"M21 287Q21 295 30 318T55 370T99 420T158 442Q204 442 227 417T250 358Q250 340 216 246T182 105Q182 62 196 45T238 27T291 44T328 78L339 95Q341 99 377 247Q407 367 413 387T427 416Q444 431 463 431Q480 431 488 421T496 402L420 84Q419 79 419 68Q419 43 426 35T447 26Q469 29 482 57T512 145Q514 153 532 153Q551 153 551 144Q550 139 549 130T540 98T523 55T498 17T462 -8Q454 -10 438 -10Q372 -10 347 46Q345 45 336 36T318 21T296 6T267 -6T233 -11Q189 -11 155 7Q103 38 103 113Q103 170 138 262T173 379Q173 380 173 381Q173 390 173 393T169 400T158 404H154Q131 404 112 385T82 344T65 302T57 280Q55 278 41 278H27Q21 284 21 287Z\"/>\n<path stroke-width=\"1\" id=\"E1-MJMATHI-62\" d=\"M73 647Q73 657 77 670T89 683Q90 683 161 688T234 694Q246 694 246 685T212 542Q204 508 195 472T180 418L176 399Q176 396 182 402Q231 442 283 442Q345 442 383 396T422 280Q422 169 343 79T173 -11Q123 -11 82 27T40 150V159Q40 180 48 217T97 414Q147 611 147 623T109 637Q104 637 101 637H96Q86 637 83 637T76 640T73 647ZM336 325V331Q336 405 275 405Q258 405 240 397T207 376T181 352T163 330L157 322L136 236Q114 150 114 114Q114 66 138 42Q154 26 178 26Q211 26 245 58Q270 81 285 114T318 219Q336 291 336 325Z\"/>\n<path stroke-width=\"1\" id=\"E1-MJMATHI-74\" d=\"M26 385Q19 392 19 395Q19 399 22 411T27 425Q29 430 36 430T87 431H140L159 511Q162 522 166 540T173 566T179 586T187 603T197 615T211 624T229 626Q247 625 254 615T261 596Q261 589 252 549T232 470L222 433Q222 431 272 431H323Q330 424 330 420Q330 398 317 385H210L174 240Q135 80 135 68Q135 26 162 26Q197 26 230 60T283 144Q285 150 288 151T303 153H307Q322 153 322 145Q322 142 319 133Q314 117 301 95T267 48T216 6T155 -11Q125 -11 98 4T59 56Q57 64 57 83V101L92 241Q127 382 128 383Q128 385 77 385H26Z\"/>\n<path stroke-width=\"1\" id=\"E1-MJMATHI-72\" d=\"M21 287Q22 290 23 295T28 317T38 348T53 381T73 411T99 433T132 442Q161 442 183 430T214 408T225 388Q227 382 228 382T236 389Q284 441 347 441H350Q398 441 422 400Q430 381 430 363Q430 333 417 315T391 292T366 288Q346 288 334 299T322 328Q322 376 378 392Q356 405 342 405Q286 405 239 331Q229 315 224 298T190 165Q156 25 151 16Q138 -11 108 -11Q95 -11 87 -5T76 7T74 17Q74 30 114 189T154 366Q154 405 128 405Q107 405 92 377T68 316T57 280Q55 278 41 278H27Q21 284 21 287Z\"/>\n<path stroke-width=\"1\" id=\"E1-MJMATHI-69\" d=\"M184 600Q184 624 203 642T247 661Q265 661 277 649T290 619Q290 596 270 577T226 557Q211 557 198 567T184 600ZM21 287Q21 295 30 318T54 369T98 420T158 442Q197 442 223 419T250 357Q250 340 236 301T196 196T154 83Q149 61 149 51Q149 26 166 26Q175 26 185 29T208 43T235 78T260 137Q263 149 265 151T282 153Q302 153 302 143Q302 135 293 112T268 61T223 11T161 -11Q129 -11 102 10T74 74Q74 91 79 106T122 220Q160 321 166 341T173 380Q173 404 156 404H154Q124 404 99 371T61 287Q60 286 59 284T58 281T56 279T53 278T49 278T41 278H27Q21 284 21 287Z\"/>\n<path stroke-width=\"1\" id=\"E1-MJMATHI-6E\" d=\"M21 287Q22 293 24 303T36 341T56 388T89 425T135 442Q171 442 195 424T225 390T231 369Q231 367 232 367L243 378Q304 442 382 442Q436 442 469 415T503 336T465 179T427 52Q427 26 444 26Q450 26 453 27Q482 32 505 65T540 145Q542 153 560 153Q580 153 580 145Q580 144 576 130Q568 101 554 73T508 17T439 -10Q392 -10 371 17T350 73Q350 92 386 193T423 345Q423 404 379 404H374Q288 404 229 303L222 291L189 157Q156 26 151 16Q138 -11 108 -11Q95 -11 87 -5T76 7T74 17Q74 30 112 180T152 343Q153 348 153 366Q153 405 129 405Q91 405 66 305Q60 285 60 284Q58 278 41 278H27Q21 284 21 287Z\"/>\n<path stroke-width=\"1\" id=\"E1-MJMATHI-67\" d=\"M311 43Q296 30 267 15T206 0Q143 0 105 45T66 160Q66 265 143 353T314 442Q361 442 401 394L404 398Q406 401 409 404T418 412T431 419T447 422Q461 422 470 413T480 394Q480 379 423 152T363 -80Q345 -134 286 -169T151 -205Q10 -205 10 -137Q10 -111 28 -91T74 -71Q89 -71 102 -80T116 -111Q116 -121 114 -130T107 -144T99 -154T92 -162L90 -164H91Q101 -167 151 -167Q189 -167 211 -155Q234 -144 254 -122T282 -75Q288 -56 298 -13Q311 35 311 43ZM384 328L380 339Q377 350 375 354T369 368T359 382T346 393T328 402T306 405Q262 405 221 352Q191 313 171 233T151 117Q151 38 213 38Q269 38 323 108L331 118L384 328Z\"/>\n</defs>\n<g stroke=\"currentColor\" fill=\"currentColor\" stroke-width=\"0\" transform=\"matrix(1 0 0 -1 0 0)\" aria-hidden=\"true\">\n <use xlink:href=\"#E1-MJMATHI-73\" x=\"0\" y=\"0\"/>\n <use xlink:href=\"#E1-MJMATHI-75\" x=\"469\" y=\"0\"/>\n <use xlink:href=\"#E1-MJMATHI-62\" x=\"1042\" y=\"0\"/>\n <use xlink:href=\"#E1-MJMATHI-73\" x=\"1471\" y=\"0\"/>\n <use xlink:href=\"#E1-MJMATHI-74\" x=\"1941\" y=\"0\"/>\n <use xlink:href=\"#E1-MJMATHI-72\" x=\"2302\" y=\"0\"/>\n <use xlink:href=\"#E1-MJMATHI-69\" x=\"2754\" y=\"0\"/>\n <use xlink:href=\"#E1-MJMATHI-6E\" x=\"3099\" y=\"0\"/>\n <use xlink:href=\"#E1-MJMATHI-67\" x=\"3700\" y=\"0\"/>\n<g transform=\"translate(4180,0)\">\n<text font-family=\"monospace\" stroke=\"none\" transform=\"scale(71.759) matrix(1 0 0 -1 0 0)\">匹</text>\n</g>\n<g transform=\"translate(5113,0)\">\n<text font-family=\"monospace\" stroke=\"none\" transform=\"scale(71.759) matrix(1 0 0 -1 0 0)\">配</text>\n</g>\n</g>\n</svg>string 的结尾部分,那么就用 <svg xmlns:xlink=\"http://www.w3.org/1999/xlink\" width=\"19.173ex\" height=\"3.343ex\" style=\"vertical-align: -1.171ex;\" viewbox=\"0 -934.9 8255.1 1439.2\" role=\"img\" focusable=\"false\" xmlns=\"http://www.w3.org/2000/svg\" aria-labelledby=\"MathJax-SVG-1-Title\">\n<title id=\"MathJax-SVG-1-Title\">replacement 来替换</title>\n<defs aria-hidden=\"true\">\n<path stroke-width=\"1\" id=\"E1-MJMATHI-72\" d=\"M21 287Q22 290 23 295T28 317T38 348T53 381T73 411T99 433T132 442Q161 442 183 430T214 408T225 388Q227 382 228 382T236 389Q284 441 347 441H350Q398 441 422 400Q430 381 430 363Q430 333 417 315T391 292T366 288Q346 288 334 299T322 328Q322 376 378 392Q356 405 342 405Q286 405 239 331Q229 315 224 298T190 165Q156 25 151 16Q138 -11 108 -11Q95 -11 87 -5T76 7T74 17Q74 30 114 189T154 366Q154 405 128 405Q107 405 92 377T68 316T57 280Q55 278 41 278H27Q21 284 21 287Z\"/>\n<path stroke-width=\"1\" id=\"E1-MJMATHI-65\" d=\"M39 168Q39 225 58 272T107 350T174 402T244 433T307 442H310Q355 442 388 420T421 355Q421 265 310 237Q261 224 176 223Q139 223 138 221Q138 219 132 186T125 128Q125 81 146 54T209 26T302 45T394 111Q403 121 406 121Q410 121 419 112T429 98T420 82T390 55T344 24T281 -1T205 -11Q126 -11 83 42T39 168ZM373 353Q367 405 305 405Q272 405 244 391T199 357T170 316T154 280T149 261Q149 260 169 260Q282 260 327 284T373 353Z\"/>\n<path stroke-width=\"1\" id=\"E1-MJMATHI-70\" d=\"M23 287Q24 290 25 295T30 317T40 348T55 381T75 411T101 433T134 442Q209 442 230 378L240 387Q302 442 358 442Q423 442 460 395T497 281Q497 173 421 82T249 -10Q227 -10 210 -4Q199 1 187 11T168 28L161 36Q160 35 139 -51T118 -138Q118 -144 126 -145T163 -148H188Q194 -155 194 -157T191 -175Q188 -187 185 -190T172 -194Q170 -194 161 -194T127 -193T65 -192Q-5 -192 -24 -194H-32Q-39 -187 -39 -183Q-37 -156 -26 -148H-6Q28 -147 33 -136Q36 -130 94 103T155 350Q156 355 156 364Q156 405 131 405Q109 405 94 377T71 316T59 280Q57 278 43 278H29Q23 284 23 287ZM178 102Q200 26 252 26Q282 26 310 49T356 107Q374 141 392 215T411 325V331Q411 405 350 405Q339 405 328 402T306 393T286 380T269 365T254 350T243 336T235 326L232 322Q232 321 229 308T218 264T204 212Q178 106 178 102Z\"/>\n<path stroke-width=\"1\" id=\"E1-MJMATHI-6C\" d=\"M117 59Q117 26 142 26Q179 26 205 131Q211 151 215 152Q217 153 225 153H229Q238 153 241 153T246 151T248 144Q247 138 245 128T234 90T214 43T183 6T137 -11Q101 -11 70 11T38 85Q38 97 39 102L104 360Q167 615 167 623Q167 626 166 628T162 632T157 634T149 635T141 636T132 637T122 637Q112 637 109 637T101 638T95 641T94 647Q94 649 96 661Q101 680 107 682T179 688Q194 689 213 690T243 693T254 694Q266 694 266 686Q266 675 193 386T118 83Q118 81 118 75T117 65V59Z\"/>\n<path stroke-width=\"1\" id=\"E1-MJMATHI-61\" d=\"M33 157Q33 258 109 349T280 441Q331 441 370 392Q386 422 416 422Q429 422 439 414T449 394Q449 381 412 234T374 68Q374 43 381 35T402 26Q411 27 422 35Q443 55 463 131Q469 151 473 152Q475 153 483 153H487Q506 153 506 144Q506 138 501 117T481 63T449 13Q436 0 417 -8Q409 -10 393 -10Q359 -10 336 5T306 36L300 51Q299 52 296 50Q294 48 292 46Q233 -10 172 -10Q117 -10 75 30T33 157ZM351 328Q351 334 346 350T323 385T277 405Q242 405 210 374T160 293Q131 214 119 129Q119 126 119 118T118 106Q118 61 136 44T179 26Q217 26 254 59T298 110Q300 114 325 217T351 328Z\"/>\n<path stroke-width=\"1\" id=\"E1-MJMATHI-63\" d=\"M34 159Q34 268 120 355T306 442Q362 442 394 418T427 355Q427 326 408 306T360 285Q341 285 330 295T319 325T330 359T352 380T366 386H367Q367 388 361 392T340 400T306 404Q276 404 249 390Q228 381 206 359Q162 315 142 235T121 119Q121 73 147 50Q169 26 205 26H209Q321 26 394 111Q403 121 406 121Q410 121 419 112T429 98T420 83T391 55T346 25T282 0T202 -11Q127 -11 81 37T34 159Z\"/>\n<path stroke-width=\"1\" id=\"E1-MJMATHI-6D\" d=\"M21 287Q22 293 24 303T36 341T56 388T88 425T132 442T175 435T205 417T221 395T229 376L231 369Q231 367 232 367L243 378Q303 442 384 442Q401 442 415 440T441 433T460 423T475 411T485 398T493 385T497 373T500 364T502 357L510 367Q573 442 659 442Q713 442 746 415T780 336Q780 285 742 178T704 50Q705 36 709 31T724 26Q752 26 776 56T815 138Q818 149 821 151T837 153Q857 153 857 145Q857 144 853 130Q845 101 831 73T785 17T716 -10Q669 -10 648 17T627 73Q627 92 663 193T700 345Q700 404 656 404H651Q565 404 506 303L499 291L466 157Q433 26 428 16Q415 -11 385 -11Q372 -11 364 -4T353 8T350 18Q350 29 384 161L420 307Q423 322 423 345Q423 404 379 404H374Q288 404 229 303L222 291L189 157Q156 26 151 16Q138 -11 108 -11Q95 -11 87 -5T76 7T74 17Q74 30 112 181Q151 335 151 342Q154 357 154 369Q154 405 129 405Q107 405 92 377T69 316T57 280Q55 278 41 278H27Q21 284 21 287Z\"/>\n<path stroke-width=\"1\" id=\"E1-MJMATHI-6E\" d=\"M21 287Q22 293 24 303T36 341T56 388T89 425T135 442Q171 442 195 424T225 390T231 369Q231 367 232 367L243 378Q304 442 382 442Q436 442 469 415T503 336T465 179T427 52Q427 26 444 26Q450 26 453 27Q482 32 505 65T540 145Q542 153 560 153Q580 153 580 145Q580 144 576 130Q568 101 554 73T508 17T439 -10Q392 -10 371 17T350 73Q350 92 386 193T423 345Q423 404 379 404H374Q288 404 229 303L222 291L189 157Q156 26 151 16Q138 -11 108 -11Q95 -11 87 -5T76 7T74 17Q74 30 112 180T152 343Q153 348 153 366Q153 405 129 405Q91 405 66 305Q60 285 60 284Q58 278 41 278H27Q21 284 21 287Z\"/>\n<path stroke-width=\"1\" id=\"E1-MJMATHI-74\" d=\"M26 385Q19 392 19 395Q19 399 22 411T27 425Q29 430 36 430T87 431H140L159 511Q162 522 166 540T173 566T179 586T187 603T197 615T211 624T229 626Q247 625 254 615T261 596Q261 589 252 549T232 470L222 433Q222 431 272 431H323Q330 424 330 420Q330 398 317 385H210L174 240Q135 80 135 68Q135 26 162 26Q197 26 230 60T283 144Q285 150 288 151T303 153H307Q322 153 322 145Q322 142 319 133Q314 117 301 95T267 48T216 6T155 -11Q125 -11 98 4T59 56Q57 64 57 83V101L92 241Q127 382 128 383Q128 385 77 385H26Z\"/>\n</defs>\n<g stroke=\"currentColor\" fill=\"currentColor\" stroke-width=\"0\" transform=\"matrix(1 0 0 -1 0 0)\" aria-hidden=\"true\">\n <use xlink:href=\"#E1-MJMATHI-72\" x=\"0\" y=\"0\"/>\n <use xlink:href=\"#E1-MJMATHI-65\" x=\"451\" y=\"0\"/>\n <use xlink:href=\"#E1-MJMATHI-70\" x=\"918\" y=\"0\"/>\n <use xlink:href=\"#E1-MJMATHI-6C\" x=\"1421\" y=\"0\"/>\n <use xlink:href=\"#E1-MJMATHI-61\" x=\"1720\" y=\"0\"/>\n <use xlink:href=\"#E1-MJMATHI-63\" x=\"2249\" y=\"0\"/>\n <use xlink:href=\"#E1-MJMATHI-65\" x=\"2683\" y=\"0\"/>\n <use xlink:href=\"#E1-MJMATHI-6D\" x=\"3149\" y=\"0\"/>\n <use xlink:href=\"#E1-MJMATHI-65\" x=\"4028\" y=\"0\"/>\n <use xlink:href=\"#E1-MJMATHI-6E\" x=\"4494\" y=\"0\"/>\n <use xlink:href=\"#E1-MJMATHI-74\" x=\"5095\" y=\"0\"/>\n<g transform=\"translate(5456,0)\">\n<text font-family=\"monospace\" stroke=\"none\" transform=\"scale(71.759) matrix(1 0 0 -1 0 0)\">来</text>\n</g>\n<g transform=\"translate(6389,0)\">\n<text font-family=\"monospace\" stroke=\"none\" transform=\"scale(71.759) matrix(1 0 0 -1 0 0)\">替</text>\n</g>\n<g transform=\"translate(7322,0)\">\n<text font-family=\"monospace\" stroke=\"none\" transform=\"scale(71.759) matrix(1 0 0 -1 0 0)\">换</text>\n</g>\n</g>\n</svg>substring.\n$&#123;string&#x2F;%substring&#x2F;replacement&#125; <span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n<h2 id=\"条件语句\">条件语句<a title=\"#条件语句\" href=\"#条件语句\"></a></h2>\n<p><strong>条件Condition的写法</strong></p>\n<pre class=\"line-numbers language-bash\" data-language=\"bash\"><code class=\"language-bash\"># 在中括号内写条件语句(推荐)\n[condition]\n# 在test命令后写条件语句\ntest condition\n\n# 字符串--条件语句\n[str1&#x3D;str2]\n[str1!&#x3D;str2]\n[str]\t# true iff str不是空字符\n-n str\t# true iff len(str) &gt; 0\n-z str\t# true iff len(str) &#x3D;&#x3D; 0\n\n# 整数--条件语句\nint1 -eq int2\t# equal\nint1 -ge int2\t# greater than\nint1 -le int2\t# less and equal\nint1 -gt int2 \t# great than and equal\nint1 -ne int2 \t# not equal\n\n# 文件--条件语句\n-d file\t\t# directory\n-f file \t# normal file\n-r file\t\t# readable\n-s file\t\t# strlen(file)&gt;0\n-w file\t\t# writable\n-x file \t# executable\n\n# 逻辑符\n!expr \t# 取反 \nexpr1 -a expr2 \t# and\nexpr1 -o expr2\t# or<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n<p><strong>条件控制流的写法</strong></p>\n<p><strong>if else</strong></p>\n<pre class=\"line-numbers language-bash\" data-language=\"bash\"><code class=\"language-bash\">#!&#x2F;bin&#x2F;bash \nif [ $1 -le 10 ];then\n\techo “a&lt;&#x3D;10”\nelif [ $1 –le 20 ];then\n\techo “10&lt;a&lt;&#x3D;20”;\nelse\n\techo “a&gt;20”;\nfi<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n<p><strong>case</strong></p>\n<pre class=\"line-numbers language-bash\" data-language=\"bash\"><code class=\"language-bash\">#!&#x2F;bin&#x2F;sh \necho “Is it morning? Please answer yes or no” \nread timeofday \t\t\t#等待用户输入 \ncase &quot;$timeofday&quot; in \nyes | y | Yes | YES） \t# 条件1\n\techo &quot;Good Morning&quot; \n\techo “Up bright and early this morning”\n[nN]*)\t\t\t\t\t# 条件2\n\techo “Good Afternoon” ;;\n*)\t\t\t\t\t\t# 用*通配符来处理无匹配项情况\n\techo “Sorry, answer not recognized” echo “Please answer yes or no” exit 1 ;;\nesac\t\t\t\t\t# 结束case判断\nexit 0<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n<p><strong>逻辑运算</strong></p>\n<p>支持短路运算</p>\n<pre class=\"line-numbers language-none\"><code class=\"language-none\">||\n&amp;&amp;<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span></span></code></pre>\n<h2 id=\"循环语句\">循环语句<a title=\"#循环语句\" href=\"#循环语句\"></a></h2>\n<p><strong>while</strong></p>\n<pre class=\"line-numbers language-bash\" data-language=\"bash\"><code class=\"language-bash\">while [condition]; do \n\tcommand(s)\ndone<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span></span></code></pre>\n<p><strong>Utill</strong></p>\n<pre class=\"line-numbers language-bash\" data-language=\"bash\"><code class=\"language-bash\">until [condition]; do \n\tcommand(s)\ndone<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span></span></code></pre>\n<p><strong>for</strong></p>\n<pre class=\"line-numbers language-bash\" data-language=\"bash\"><code class=\"language-bash\">for arg in [list]; do \t# list 中的参数允许包含通配符\n\tcommand(s)\ndone<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span></span></code></pre>\n<h2 id=\"数组\">数组<a title=\"#数组\" href=\"#数组\"></a></h2>\n<pre class=\"line-numbers language-bash\" data-language=\"bash\"><code class=\"language-bash\">area1[13]&#x3D;1 \t# 初始化数组，可以跳着初始化，数组成员不必一定要连贯或连续的，空缺元素是允许的\narea2&#x3D;( zero one two three four ) # 初始化数组，数组下标从零开始\narea3&#x3D;([17]&#x3D;seventeen [24]&#x3D;twenty-four)\t# 初始化数组，指定位置\n\necho $&#123;area2[0]&#125;\t# 访问数组<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n<h2 id=\"函数\">函数<a title=\"#函数\" href=\"#函数\"></a></h2>\n<p>函数必须先定义再调用,调用的时候直接写函数名就可以了</p>\n<pre class=\"line-numbers language-bash\" data-language=\"bash\"><code class=\"language-bash\">[function] function_name ()&#123;\n\tcommands(s)\n&#125; <span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span></span></code></pre>\n<p>那传参和返回值怎么办呢?</p>\n<ul>\n<li>调用函数的时候在后面加上参数, 使用位置参数 <strong>\\<svg xmlns:xlink=\"http://www.w3.org/1999/xlink\" width=\"1.743ex\" height=\"2.176ex\" style=\"vertical-align: -0.338ex;\" viewbox=\"0 -791.3 750.5 936.9\" role=\"img\" focusable=\"false\" xmlns=\"http://www.w3.org/2000/svg\" aria-labelledby=\"MathJax-SVG-1-Title\">\n<title id=\"MathJax-SVG-1-Title\">1 \\</title>\n<defs aria-hidden=\"true\">\n<path stroke-width=\"1\" id=\"E1-MJMAIN-31\" d=\"M213 578L200 573Q186 568 160 563T102 556H83V602H102Q149 604 189 617T245 641T273 663Q275 666 285 666Q294 666 302 660V361L303 61Q310 54 315 52T339 48T401 46H427V0H416Q395 3 257 3Q121 3 100 0H88V46H114Q136 46 152 46T177 47T193 50T201 52T207 57T213 61V578Z\"/>\n</defs>\n<g stroke=\"currentColor\" fill=\"currentColor\" stroke-width=\"0\" transform=\"matrix(1 0 0 -1 0 0)\" aria-hidden=\"true\">\n <use xlink:href=\"#E1-MJMAIN-31\" x=\"0\" y=\"0\"/>\n</g>\n</svg>2</strong> 等进行取参</li>\n<li>返回值使用 <strong>$?</strong> 获得</li>\n</ul>\n<pre class=\"line-numbers language-bash\" data-language=\"bash\"><code class=\"language-bash\">max 1 2 3\necho $?<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span></span></code></pre>\n<h2 id=\"path\">PATH<a title=\"#path\" href=\"#path\"></a></h2>\n<p>当大家在工作目录中使用 GCC 编译出来了一个可执行文件<code>a.out</code>，要运行这个程序的时候是这样进行的：</p>\n<pre class=\"line-numbers language-bash\" data-language=\"bash\"><code class=\"language-bash\">.&#x2F;a.out<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span></span></code></pre>\n<p>或者，直接</p>\n<pre class=\"line-numbers language-bash\" data-language=\"bash\"><code class=\"language-bash\">a.out<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span></span></code></pre>\n<p>这两个都是一样的，都是<strong>直接在 shell 中输入了要执行的文件的文件名</strong>。这是在 bash shell 中执行可执行文件的唯一方式。</p>\n<p>但如果我们不在这个可执行文件所在的目录下怎么办？如果我在一个其他目录下，想执行这个程序，就需要用相对路径或绝对路径写出整个路径前缀，这往往是一件非常麻烦的事情。这时候，<code>PATH</code>就诞生了。</p>\n<p><code>PATH</code>是一个环境变量，这个环境变量指明了<strong>系统默认</strong>的查找可执行文件的路径。你可以在 bash shell 中使用<code>echo $PATH</code>打印出你当前的<code>PATH</code>，它将如下所示：</p>\n<pre class=\"line-numbers language-bash\" data-language=\"bash\"><code class=\"language-bash\">&#x2F;usr&#x2F;local&#x2F;sbin:&#x2F;usr&#x2F;local&#x2F;bin:&#x2F;usr&#x2F;sbin:&#x2F;usr&#x2F;bin:&#x2F;sbin:&#x2F;bin:&#x2F;usr&#x2F;games:&#x2F;usr&#x2F;local&#x2F;games:&#x2F;snap&#x2F;bin<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span></span></code></pre>\n<p>这一行输出实际上是几个路径之间用<code>:</code>拼接起来的。</p>\n<p>有了<code>PATH</code>，当你在命令行输入一个程序名时，bash shell 就会去<code>PATH</code>所指定的这几个目录中去寻找该程序，如果找不到就会报错。</p>\n<p>现在大家知道了吧，我们平常使用的指令<code>ls</code>、<code>mv</code>等指令没啥神奇的，他们只不过是操作系统预设好的一个个程序，并放在了<code>PATH</code>指定的某个路径下，我们输入指令时，其实就相当于是在执行这些程序。</p>\n<p>比如，我们可以用<code>which</code>来查看这些“内置程序”的具体路径</p>\n<p>这一点可以去路径<code>/usr/bin</code>下去查看验证一下。</p>\n<h2 id=\"调试\">调试<a title=\"#调试\" href=\"#调试\"></a></h2>\n<p>bash没有调试工具，只提供了几个辅助参数</p>\n<pre class=\"line-numbers language-bash\" data-language=\"bash\"><code class=\"language-bash\">sh -n scriptname # 不会实际运行脚本,而只是检查脚本的语法错误，该方法不能检测所有的语法错误。\nsh -v scriptname # 在实际执行一个命令前打印出这个命令.\nsh -x scriptname # 打印每个命令的执行结果, 但只用在某些小的方面.<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span></span></code></pre>\n<p>真正调试的时候依赖于printf大法，在各个位置使用<strong>echo</strong>打印信息，高级一点可以在编写程序阶段就使用<strong>assert</strong></p>\n<h2 id=\"trap\">Trap<a title=\"#trap\" href=\"#trap\"></a></h2>\n<p>在程序退出之前可以加一个hook（钩子函数），执行一系列的动作后再退出程序。原理是exit发出一个信号signal，在我们设置特定的trap后，这种信号会触发trap（类似中断），执行trap的处理函数。这常用来捕捉exit 命令做某事, 如强制打印变量值</p>\n<pre class=\"line-numbers language-bash\" data-language=\"bash\"><code class=\"language-bash\"># trap 命令必须是脚本中的第一个命令。\n#!&#x2F;bin&#x2F;sh \ntrap ‘rm -f &#x2F;tmp&#x2F;my_tmp_file’ INT \necho creating file &#x2F;tmp&#x2F;my_tmp_file\ndate &gt; &#x2F;tmp&#x2F;my_tmp_file \necho “press interrupt (CTRL-C) to interrupt ....” \nwhile [ -f &#x2F;tmp&#x2F;my_tmp_file ]; do \n\techo File exists sleep 1 \ndone\necho The file no longer exists<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n<p>信号量一览</p>\n<div class=\"φbq\"><div class=\"φbs\"><table><thead>\n<tr>\n<th>Signal</th>\n<th>Description</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>HUP</td>\n<td>挂起</td>\n</tr>\n<tr>\n<td>INT</td>\n<td>Ctrl+C引发的中断</td>\n</tr>\n<tr>\n<td>QUIT</td>\n<td>Ctrl+\\引发的退出</td>\n</tr>\n<tr>\n<td>ABRT</td>\n<td>严重执行错误引发的中止</td>\n</tr>\n<tr>\n<td>ALRM</td>\n<td>定时处理的报警信号</td>\n</tr>\n<tr>\n<td>TERM</td>\n<td>终止，系统关机时发送</td>\n</tr>\n</tbody>\n</table></div></div><hr>\n<p>好啦，你已经学会shell编程辣！！！<s>现在快用shell手搓一个快排吧</s></p>\n<blockquote>\n<p>FLAG：感觉比较重量级的bash脚本是用来跑文件批处理的（自动化测试|批量运行|批量重命名），python也能干这活儿，不知道有什么优劣区别，有机会实践一下再POST一篇新内容吧</p>\n</blockquote>\n<hr>\n<blockquote>\n<p><strong>Reference</strong></p>\n<p>[1] BUAA系统编程课程第三章PPT–01 Shell编程</p>\n<p>[2] 系统编程课程指导书（非常好指导，爱来自助教）</p>\n</blockquote>\n","prev":{"title":"「nginx」学习笔记","link":"2022/09/30/「nginx」学习笔记"},"next":{"title":"「系统编程」动态链接库的创建和使用","link":"2022/09/14/「系统编程」动态链接库的创建和使用"},"plink":"http://blog.horik.cn/2022/09/27/「系统编程」Shell编程FAQ/","toc":[{"id":"基本语法约定","title":"基本语法约定","index":"1"},{"id":"变量","title":"变量","index":"2","children":[{"id":"环境变量","title":"环境变量","index":"2.1"},{"id":"用户变量","title":"用户变量","index":"2.2"},{"id":"奇怪的引号机制","title":"奇怪的引号机制","index":"2.3"},{"id":"命令行参数","title":"命令行参数","index":"2.4"}]},{"id":"运算","title":"运算","index":"3"},{"id":"字符串操作","title":"字符串操作","index":"4"},{"id":"条件语句","title":"条件语句","index":"5"},{"id":"循环语句","title":"循环语句","index":"6"},{"id":"数组","title":"数组","index":"7"},{"id":"函数","title":"函数","index":"8"},{"id":"path","title":"PATH","index":"9"},{"id":"调试","title":"调试","index":"10"},{"id":"trap","title":"Trap","index":"11"}],"reward":true,"copyright":{"author":"Horik","link":"<a href=\"http://blog.horik.cn/2022/09/27/「系统编程」Shell编程FAQ/\" title=\"「系统编程」Shell编程FAQ\">http://blog.horik.cn/2022/09/27/「系统编程」Shell编程FAQ/</a>","license":"Attribution-NonCommercial-NoDerivatives 4.0 International (<a href=\\\"https://creativecommons.org/licenses/by-nc-sa/4.0/\\\" rel=\\\"external nofollow\\\" target=\\\"_blank\\\">CC BY-NC-ND 4.0</a>)","published":"September 27, 2022","updated":"October 25, 2022"},"reading_time":"3708 words in 25 min"}